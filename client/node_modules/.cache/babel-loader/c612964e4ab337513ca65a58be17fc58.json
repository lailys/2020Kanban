{"ast":null,"code":"var _jsxFileName = \"/Users/lailysarvarian/a-kanban/client/src/components/TaskPage.js\";\nimport React, { Component } from \"react\";\nimport opensocket from \"socket.io-client\";\nimport moment from \"moment\";\nimport Member from \"./Member\";\nimport { DateTimeInput } from \"semantic-ui-calendar-react\";\nimport { Form } from \"semantic-ui-react\";\n\nclass TaskPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      members: [],\n      pic: \"\",\n      image: {},\n      optionDisplay: \"none\",\n      deadline: \"\",\n      datetime: \"\",\n      priority: \"\",\n      comments: [],\n      newComment: {}\n    };\n\n    this.componentDidMount = () => {\n      this.getMembers();\n      this.fetchComments();\n\n      if (this.props.task.deadline) {\n        this.setState({\n          deadline: moment(this.props.task.deadline).format(\"MMMM Do YYYY, HH:mm a \"),\n          datetime: this.props.task.deadline,\n          priority: this.props.task.priority\n        });\n      } else {\n        this.setState({\n          deadline: \"\",\n          datetime: this.props.task.deadline,\n          priority: this.props.task.priority\n        });\n      }\n\n      if (this.props.task.pic !== \"\") {\n        this.setState({\n          pic: `http://localhost:8080/${this.props.task.pic}`\n        });\n      } else {\n        this.setState({\n          pic: \"\"\n        });\n      }\n\n      const socket = opensocket(\"http://localhost:8080\");\n      socket.on(\"taskComment\", data => {\n        if (data.action === \"create\") {\n          this.fetchComments();\n        }\n      });\n      socket.on(\"taskMember\", data => {\n        if (data.action === \"create\" || data.action === \"delete\") {\n          this.getMembers();\n        }\n      });\n      socket.on(\"taskImg\", data => {\n        if (data.action === \"create\") {\n          this.setState({\n            pic: `http://localhost:8080/${data.img}`\n          });\n        }\n      });\n    };\n\n    this.fetchComments = () => {\n      fetch(`http://localhost:8080/comments/${this.props.task._id}`).then(res => {\n        return res.json();\n      }).then(result => {\n        this.setState({\n          comments: result.comments\n        });\n      });\n    };\n\n    this.getMembers = () => {\n      fetch(`http://localhost:8080/task-members/${this.props.task._id}`, {\n        headers: {\n          Authorization: \"Bearer \" + this.props.token\n        }\n      }).then(res => {\n        return res.json();\n      }).then(result => {\n        this.setState({\n          members: result.members\n        });\n      });\n    };\n\n    this.createImg = e => {\n      e.preventDefault();\n      const file = e.target.files[0];\n      this.setState({\n        pic: URL.createObjectURL(file)\n      });\n      let image = Object.assign({}, this.state.image);\n      image[e.target.id] = e.target.files[0];\n      this.setState({\n        image\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        deadline: value,\n        datetime: value\n      });\n    };\n\n    this.createEdit = e => {\n      this.setState({\n        priority: e.target.value\n      });\n    };\n\n    this.createComment = e => {\n      this.setState({\n        newComment: {\n          id: this.props.user,\n          comment: e.target.value\n        }\n      });\n    };\n\n    this.updateMembers = members => {\n      this.setState({\n        members\n      });\n    };\n\n    this.submitImg = e => {\n      e.preventDefault();\n\n      if (this.props.task.creator === this.props.user) {\n        var formData = new FormData();\n        Object.keys(this.state.image).map(key => {\n          formData.append(key, this.state.image[key]);\n        });\n        fetch(`http://localhost:8080/taskImg/${this.props.user}-${this.props.task._id}`, {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + this.props.token\n          },\n          body: formData\n        }).then(result => {\n          return result.json();\n        }).then(result => {\n          if (result.done) {} else {\n            alert(result.message);\n          }\n        });\n      } else {\n        alert(\"you are not eligible to change the picture\");\n      }\n    };\n\n    this.participate = e => {\n      e.preventDefault();\n      fetch(\"http://localhost:8080/task-members\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          task: this.props.task,\n          user: this.props.user\n        })\n      }).then(result => {\n        return result.json();\n      }).then(result => {\n        if (result.done) {\n          console.log(result, \">>>>>\"); // this.setState({ members :result.members});\n        } else {\n          alert(result.message);\n        }\n      });\n    };\n\n    this.submitComment = e => {\n      e.preventDefault();\n      this.setState({\n        newComment: {}\n      });\n      fetch(`http://localhost:8080/task-comment`, {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          comment: this.state.newComment,\n          user: this.props.user,\n          responders: this.props.task.responders,\n          taskId: this.props.task._id,\n          date: new Date()\n        })\n      }).then(result => {\n        return result.json();\n      }).then(result => {\n        if (result.done) {\n          this.setState({\n            newComment: {}\n          });\n        } else {\n          alert(result.message);\n        }\n      });\n    };\n\n    this.submitChange = e => {\n      e.preventDefault();\n\n      if (this.props.token) {\n        fetch(\"http://localhost:8080/update-task\", {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + this.props.token,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id: this.props.task._id,\n            title: this.props.task.title,\n            description: this.props.task.description,\n            priority: this.state.priority,\n            url: this.props.task.url || \"\",\n            deadline: this.state.datetime,\n            user: this.props.user\n          })\n        }).then(result => {\n          return result.json();\n        }).then(result => {\n          if (!result.done) {\n            alert(result.message);\n          }\n        });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    };\n\n    this.renderMembers = () => {\n      console.log(this.state.members, \">>>>>>>><<<<<<<<<<<\");\n      let all = [];\n      this.state.members.map((member, i) => {\n        // console.log(member,\"------------------->\")\n        all.push( /*#__PURE__*/React.createElement(Member, {\n          key: `img-${i}`,\n          member: member,\n          members: member.responders,\n          updateMembers: this.updateMembers,\n          i: i,\n          token: this.props.token,\n          task: this.props.task,\n          user: this.props.user,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 9\n          }\n        }));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"task-page-members\",\n        key: \"task-page-members\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 7\n        }\n      }, all);\n    };\n\n    this.renderCommentArea = () => {\n      let all = [];\n\n      if (this.state.comments.length > 0) {\n        this.state.comments.map((comment, i) => {\n          all.push( /*#__PURE__*/React.createElement(\"div\", {\n            className: \"comment-cube\",\n            key: `comment-cube-${i}`,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"p\", {\n            className: \"comment\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              fontSize: \"110%\",\n              fontWeight: \"400\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }\n          }, `${comment.commenter}: `), comment.comment, /*#__PURE__*/React.createElement(\"br\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"comment-date\",\n            style: {\n              fontSize: \"80%\",\n              fontWeight: \"400\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }\n          }, !comment.date ? \"\" : moment(comment.date).format(\"MMMM Do YYYY, HH:mm a \")))));\n        });\n      }\n\n      if (this.props.token) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"comments-area\",\n          key: \"comments-area\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 9\n          }\n        }, all, /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: this.submitComment,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"textarea\", {\n          id: \"text-area\",\n          value: this.state.newComment.comment || \"\",\n          onChange: e => this.createComment(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\",\n          className: \"post-comment-btn\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }\n        }, \"COMMENT\")));\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"comments-area\",\n          key: \"comments-area\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 9\n          }\n        }, all);\n      }\n    };\n\n    this.defaultPriority = priority => {\n      if (priority === \"#0aa7f5\") {\n        return \"STANDARD\";\n      } else if (priority === \"#EDF67D\") {\n        return \"FIXED DATE\";\n      } else if (priority === \"#ff006e\") {\n        return \"EXPEDITE\";\n      }\n    };\n\n    this.renderPage = () => {\n      const now = new Date();\n\n      if (this.props.token) {\n        const style = {\n          position: \"relative\"\n        };\n\n        if (this.state.pic) {\n          style.backgroundImage = `url(\"${this.state.pic}\")`;\n          style.height = \"40vh\";\n        } else {\n          style.backgroundImage = \"\";\n          style.height = \"10vh\";\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"task-page-container\",\n          style: {\n            width: this.props.overflowWidth\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"task-overflow\",\n          style: {\n            width: this.props.overflowWidth\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"form\", {\n          id: \"input\",\n          style: style,\n          onSubmit: this.submitImg,\n          encType: \"multipart/form-data\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          className: \"task-picUrl\",\n          type: \"file\",\n          name: \"picUrl\",\n          id: \"picUrl\",\n          onChange: e => this.createImg(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\",\n          id: \"task-img-update-btn\",\n          className: \"fas fa-pencil-alt\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }\n        })), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"task-page-name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }\n        }, this.props.task.title.toUpperCase()), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"task-page-desc\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }\n        }, this.props.task.description, /*#__PURE__*/React.createElement(\"a\", {\n          href: `${this.props.task.url}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }\n        }, \"LINK\")), /*#__PURE__*/React.createElement(Form, {\n          onSubmit: e => this.submitChange(e),\n          id: \"edit-date-form\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(DateTimeInput, {\n          initialDate: now,\n          id: \"date-timeInput\",\n          className: \"task-page-date\",\n          name: \"dateTime\",\n          placeholder: \"Deadline\",\n          value: this.state.deadline,\n          iconPosition: \"right\",\n          onChange: this.handleChange,\n          style: {\n            width: \"40vw\",\n            border: \"none\",\n            outline: \"none\"\n          },\n          dateTimeFormat: \"YYYY-MM-DD HH:mm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"select\", {\n          value: this.state.priority,\n          onChange: e => this.createEdit(e),\n          id: \"edit-select\",\n          style: {\n            border: \"none\",\n            outline: \"none\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: `${this.state.priority}`,\n          style: {\n            color: this.state.priority,\n            fontSize: \"300%\",\n            fontWeight: \"bolder\"\n          },\n          defaultValue: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }\n        }, this.defaultPriority(this.state.priority)), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"#0aa7f5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }\n        }, \"STANDARD\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"#EDF67D\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 17\n          }\n        }, \"FIXED DATE\"), /*#__PURE__*/React.createElement(\"option\", {\n          value: \"#ff006e\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 17\n          }\n        }, \"EXPEDITE\")), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          type: \"submit\",\n          id: \"update-button\",\n          className: \"fas fa-pencil-alt\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }\n        })), this.renderCommentArea(), this.renderMembers(), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"participate-btn\",\n          onClick: e => this.participate(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }\n        }, \"+\")));\n      } else {\n        const style = {\n          position: \"relative\"\n        };\n\n        if (this.state.pic !== \"\") {\n          style.backgroundImage = `url(\"${this.state.pic}\")`;\n          style.height = \"40vh\";\n        } else {\n          style.backgroundImage = \"\";\n          style.height = \"10vh\";\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"task-page-container\",\n          style: {\n            width: this.props.overflowWidth\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"task-overflow\",\n          style: {\n            width: this.props.overflowWidth\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          id: \"input\",\n          style: style,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"task-page-name\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }\n        }, this.props.task.title.toUpperCase()), /*#__PURE__*/React.createElement(\"p\", {\n          className: \"task-page-desc\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }\n        }, this.props.task.description, /*#__PURE__*/React.createElement(\"a\", {\n          className: \"task-page-link-inside\",\n          href: `${this.props.task.url}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 17\n          }\n        }), \"LINK\"), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"task-page-date-inside\",\n          style: {\n            color: \"#ff006e\",\n            width: \"66vw\",\n            height: \"3vh\",\n            margin: \"1vh 0\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }\n        }, this.state.deadline, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n          id: \"edit-date-form\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"edit-date-form-p\",\n          style: {\n            border: `solid .1px ${this.state.priority}`\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }\n        }, this.defaultPriority(this.state.priority))), this.renderCommentArea(), this.renderMembers()));\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-page\",\n      style: {\n        width: this.props.pageWidth,\n        left: this.props.pageLeft,\n        borderRadius: this.props.pageRadius,\n        alignItems: this.props.flexFlow\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 7\n      }\n    }, this.renderPage());\n  }\n\n}\n\nexport default TaskPage;","map":{"version":3,"sources":["/Users/lailysarvarian/a-kanban/client/src/components/TaskPage.js"],"names":["React","Component","opensocket","moment","Member","DateTimeInput","Form","TaskPage","state","members","pic","image","optionDisplay","deadline","datetime","priority","comments","newComment","componentDidMount","getMembers","fetchComments","props","task","setState","format","socket","on","data","action","img","fetch","_id","then","res","json","result","headers","Authorization","token","createImg","e","preventDefault","file","target","files","URL","createObjectURL","Object","assign","id","handleChange","name","value","createEdit","createComment","user","comment","updateMembers","submitImg","creator","formData","FormData","keys","map","key","append","method","body","done","alert","message","participate","JSON","stringify","console","log","submitComment","responders","taskId","date","Date","submitChange","title","description","url","history","push","renderMembers","all","member","i","renderCommentArea","length","fontSize","fontWeight","commenter","defaultPriority","renderPage","now","style","position","backgroundImage","height","width","overflowWidth","toUpperCase","border","outline","color","margin","render","pageWidth","left","pageLeft","borderRadius","pageRadius","alignItems","flexFlow"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,aAAT,QAA8B,4BAA9B;AACA,SAASC,IAAT,QAAqB,mBAArB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BO,KAD+B,GACvB;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,GAAG,EAAE,EAFC;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,aAAa,EAAE,MAJT;AAKNC,MAAAA,QAAQ,EAAE,EALJ;AAMNC,MAAAA,QAAQ,EAAE,EANJ;AAONC,MAAAA,QAAQ,EAAE,EAPJ;AAQNC,MAAAA,QAAQ,EAAE,EARJ;AASNC,MAAAA,UAAU,EAAE;AATN,KADuB;;AAAA,SAY/BC,iBAZ+B,GAYX,MAAM;AACxB,WAAKC,UAAL;AACA,WAAKC,aAAL;;AACA,UAAI,KAAKC,KAAL,CAAWC,IAAX,CAAgBT,QAApB,EAA8B;AAC5B,aAAKU,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAEV,MAAM,CAAC,KAAKkB,KAAL,CAAWC,IAAX,CAAgBT,QAAjB,CAAN,CAAiCW,MAAjC,CACR,wBADQ,CADE;AAIZV,UAAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWC,IAAX,CAAgBT,QAJd;AAKZE,UAAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWC,IAAX,CAAgBP;AALd,SAAd;AAOD,OARD,MAQO;AACL,aAAKQ,QAAL,CAAc;AACZV,UAAAA,QAAQ,EAAE,EADE;AAEZC,UAAAA,QAAQ,EAAE,KAAKO,KAAL,CAAWC,IAAX,CAAgBT,QAFd;AAGZE,UAAAA,QAAQ,EAAE,KAAKM,KAAL,CAAWC,IAAX,CAAgBP;AAHd,SAAd;AAKD;;AACD,UAAI,KAAKM,KAAL,CAAWC,IAAX,CAAgBZ,GAAhB,KAAwB,EAA5B,EAAgC;AAC9B,aAAKa,QAAL,CAAc;AACZb,UAAAA,GAAG,EAAG,yBAAwB,KAAKW,KAAL,CAAWC,IAAX,CAAgBZ,GAAI;AADtC,SAAd;AAGD,OAJD,MAIO;AACL,aAAKa,QAAL,CAAc;AACZb,UAAAA,GAAG,EAAE;AADO,SAAd;AAGD;;AACD,YAAMe,MAAM,GAAGvB,UAAU,CAAC,uBAAD,CAAzB;AACAuB,MAAAA,MAAM,CAACC,EAAP,CAAU,aAAV,EAA0BC,IAAD,IAAU;AACjC,YAAIA,IAAI,CAACC,MAAL,KAAgB,QAApB,EAA+B;AAC7B,eAAKR,aAAL;AACD;AACF,OAJD;AAKAK,MAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAyBC,IAAD,IAAU;AAChC,YAAIA,IAAI,CAACC,MAAL,KAAgB,QAAhB,IAA0BD,IAAI,CAACC,MAAL,KAAgB,QAA9C,EAAwD;AACtD,eAAKT,UAAL;AACD;AACF,OAJD;AAKAM,MAAAA,MAAM,CAACC,EAAP,CAAU,SAAV,EAAsBC,IAAD,IAAU;AAC7B,YAAIA,IAAI,CAACC,MAAL,KAAgB,QAApB,EAA8B;AAC5B,eAAKL,QAAL,CAAc;AAAEb,YAAAA,GAAG,EAAG,yBAAwBiB,IAAI,CAACE,GAAI;AAAzC,WAAd;AACD;AACF,OAJD;AAKD,KAvD8B;;AAAA,SAwD/BT,aAxD+B,GAwDf,MAAM;AACpBU,MAAAA,KAAK,CAAE,kCAAiC,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,GAAI,EAAvD,CAAL,CACGC,IADH,CACSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAHH,EAIGF,IAJH,CAISG,MAAD,IAAY;AAChB,aAAKZ,QAAL,CAAc;AAAEP,UAAAA,QAAQ,EAAEmB,MAAM,CAACnB;AAAnB,SAAd;AACD,OANH;AAOD,KAhE8B;;AAAA,SAiE/BG,UAjE+B,GAiElB,MAAM;AACjBW,MAAAA,KAAK,CAAE,sCAAqC,KAAKT,KAAL,CAAWC,IAAX,CAAgBS,GAAI,EAA3D,EAA8D;AACjEK,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAY,KAAKhB,KAAL,CAAWiB;AAD/B;AADwD,OAA9D,CAAL,CAKGN,IALH,CAKSC,GAAD,IAAS;AACb,eAAOA,GAAG,CAACC,IAAJ,EAAP;AACD,OAPH,EAQGF,IARH,CAQSG,MAAD,IAAY;AAChB,aAAKZ,QAAL,CAAc;AAAEd,UAAAA,OAAO,EAAE0B,MAAM,CAAC1B;AAAlB,SAAd;AACD,OAVH;AAWD,KA7E8B;;AAAA,SA8E/B8B,SA9E+B,GA8ElBC,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;AACA,YAAMC,IAAI,GAAGF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAb;AACA,WAAKrB,QAAL,CAAc;AAAEb,QAAAA,GAAG,EAAEmC,GAAG,CAACC,eAAJ,CAAoBJ,IAApB;AAAP,OAAd;AACA,UAAI/B,KAAK,GAAGoC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKxC,KAAL,CAAWG,KAA7B,CAAZ;AACAA,MAAAA,KAAK,CAAC6B,CAAC,CAACG,MAAF,CAASM,EAAV,CAAL,GAAqBT,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB;AACA,WAAKrB,QAAL,CAAc;AAAEZ,QAAAA;AAAF,OAAd;AACD,KArF8B;;AAAA,SAsF/BuC,YAtF+B,GAsFhB,CAACV,CAAD,EAAI;AAAEW,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAJ,KAAwB;AACrC,WAAK7B,QAAL,CAAc;AACZV,QAAAA,QAAQ,EAAEuC,KADE;AAEZtC,QAAAA,QAAQ,EAAEsC;AAFE,OAAd;AAID,KA3F8B;;AAAA,SA4F/BC,UA5F+B,GA4FjBb,CAAD,IAAO;AAClB,WAAKjB,QAAL,CAAc;AAAER,QAAAA,QAAQ,EAAEyB,CAAC,CAACG,MAAF,CAASS;AAArB,OAAd;AACD,KA9F8B;;AAAA,SA+F/BE,aA/F+B,GA+Fdd,CAAD,IAAO;AACrB,WAAKjB,QAAL,CAAc;AACZN,QAAAA,UAAU,EAAE;AAAEgC,UAAAA,EAAE,EAAE,KAAK5B,KAAL,CAAWkC,IAAjB;AAAuBC,UAAAA,OAAO,EAAEhB,CAAC,CAACG,MAAF,CAASS;AAAzC;AADA,OAAd;AAGD,KAnG8B;;AAAA,SAoG/BK,aApG+B,GAoGdhD,OAAD,IAAa;AAC3B,WAAKc,QAAL,CAAc;AAAEd,QAAAA;AAAF,OAAd;AACD,KAtG8B;;AAAA,SAuG/BiD,SAvG+B,GAuGlBlB,CAAD,IAAO;AACjBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,KAAKpB,KAAL,CAAWC,IAAX,CAAgBqC,OAAhB,KAA4B,KAAKtC,KAAL,CAAWkC,IAA3C,EAAiD;AAC/C,YAAIK,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AACAd,QAAAA,MAAM,CAACe,IAAP,CAAY,KAAKtD,KAAL,CAAWG,KAAvB,EAA8BoD,GAA9B,CAAmCC,GAAD,IAAS;AACzCJ,UAAAA,QAAQ,CAACK,MAAT,CAAgBD,GAAhB,EAAqB,KAAKxD,KAAL,CAAWG,KAAX,CAAiBqD,GAAjB,CAArB;AACD,SAFD;AAGAlC,QAAAA,KAAK,CACF,iCAAgC,KAAKT,KAAL,CAAWkC,IAAK,IAAG,KAAKlC,KAAL,CAAWC,IAAX,CAAgBS,GAAI,EADrE,EAEH;AACEmC,UAAAA,MAAM,EAAE,MADV;AAEE9B,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAE,YAAY,KAAKhB,KAAL,CAAWiB;AAD/B,WAFX;AAKE6B,UAAAA,IAAI,EAAEP;AALR,SAFG,CAAL,CAUG5B,IAVH,CAUSG,MAAD,IAAY;AAChB,iBAAOA,MAAM,CAACD,IAAP,EAAP;AACD,SAZH,EAaGF,IAbH,CAaSG,MAAD,IAAY;AAChB,cAAIA,MAAM,CAACiC,IAAX,EAAiB,CAChB,CADD,MACO;AACLC,YAAAA,KAAK,CAAClC,MAAM,CAACmC,OAAR,CAAL;AACD;AACF,SAlBH;AAmBD,OAxBD,MAwBO;AACLD,QAAAA,KAAK,CAAC,4CAAD,CAAL;AACD;AACF,KApI8B;;AAAA,SAqI/BE,WArI+B,GAqIhB/B,CAAD,IAAO;AACnBA,MAAAA,CAAC,CAACC,cAAF;AACAX,MAAAA,KAAK,CAAC,oCAAD,EAAuC;AAC1CoC,QAAAA,MAAM,EAAE,MADkC;AAE1C9B,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAY,KAAKhB,KAAL,CAAWiB,KAD/B;AAEP,0BAAgB;AAFT,SAFiC;AAM1C6B,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;AACnBnD,UAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IADE;AAEnBiC,UAAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWkC;AAFE,SAAf;AANoC,OAAvC,CAAL,CAWGvB,IAXH,CAWSG,MAAD,IAAY;AAChB,eAAOA,MAAM,CAACD,IAAP,EAAP;AACD,OAbH,EAcGF,IAdH,CAcSG,MAAD,IAAY;AAChB,YAAIA,MAAM,CAACiC,IAAX,EAAiB;AACfM,UAAAA,OAAO,CAACC,GAAR,CAAYxC,MAAZ,EAAmB,OAAnB,EADe,CAEf;AACD,SAHD,MAGO;AACLkC,UAAAA,KAAK,CAAClC,MAAM,CAACmC,OAAR,CAAL;AACD;AACF,OArBH;AAsBD,KA7J8B;;AAAA,SA8J/BM,aA9J+B,GA8JdpC,CAAD,IAAO;AACrBA,MAAAA,CAAC,CAACC,cAAF;AACA,WAAKlB,QAAL,CAAc;AAAEN,QAAAA,UAAU,EAAE;AAAd,OAAd;AACAa,MAAAA,KAAK,CAAE,oCAAF,EAAuC;AAC1CoC,QAAAA,MAAM,EAAE,MADkC;AAE1C9B,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAE,YAAY,KAAKhB,KAAL,CAAWiB,KAD/B;AAEP,0BAAgB;AAFT,SAFiC;AAM1C6B,QAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;AACnBjB,UAAAA,OAAO,EAAE,KAAKhD,KAAL,CAAWS,UADD;AAEnBsC,UAAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWkC,IAFE;AAGnBsB,UAAAA,UAAU,EAAE,KAAKxD,KAAL,CAAWC,IAAX,CAAgBuD,UAHT;AAInBC,UAAAA,MAAM,EAAE,KAAKzD,KAAL,CAAWC,IAAX,CAAgBS,GAJL;AAKnBgD,UAAAA,IAAI,EAAE,IAAIC,IAAJ;AALa,SAAf;AANoC,OAAvC,CAAL,CAcGhD,IAdH,CAcSG,MAAD,IAAY;AAChB,eAAOA,MAAM,CAACD,IAAP,EAAP;AACD,OAhBH,EAiBGF,IAjBH,CAiBSG,MAAD,IAAY;AAChB,YAAIA,MAAM,CAACiC,IAAX,EAAiB;AACzB,eAAK7C,QAAL,CAAc;AAACN,YAAAA,UAAU,EAAC;AAAZ,WAAd;AACE,SAFM,MAEA;AACEoD,UAAAA,KAAK,CAAClC,MAAM,CAACmC,OAAR,CAAL;AACD;AACF,OAvBH;AAwBD,KAzL8B;;AAAA,SA0L/BW,YA1L+B,GA0LfzC,CAAD,IAAO;AACpBA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAI,KAAKpB,KAAL,CAAWiB,KAAf,EAAsB;AACpBR,QAAAA,KAAK,CAAC,mCAAD,EAAsC;AACzCoC,UAAAA,MAAM,EAAE,MADiC;AAEzC9B,UAAAA,OAAO,EAAE;AACPC,YAAAA,aAAa,EAAE,YAAY,KAAKhB,KAAL,CAAWiB,KAD/B;AAEP,4BAAgB;AAFT,WAFgC;AAMzC6B,UAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAe;AACnBxB,YAAAA,EAAE,EAAE,KAAK5B,KAAL,CAAWC,IAAX,CAAgBS,GADD;AAEnBmD,YAAAA,KAAK,EAAE,KAAK7D,KAAL,CAAWC,IAAX,CAAgB4D,KAFJ;AAGnBC,YAAAA,WAAW,EAAE,KAAK9D,KAAL,CAAWC,IAAX,CAAgB6D,WAHV;AAInBpE,YAAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWO,QAJF;AAKnBqE,YAAAA,GAAG,EAAE,KAAK/D,KAAL,CAAWC,IAAX,CAAgB8D,GAAhB,IAAuB,EALT;AAMnBvE,YAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWM,QANF;AAOnByC,YAAAA,IAAI,EAAE,KAAKlC,KAAL,CAAWkC;AAPE,WAAf;AANmC,SAAtC,CAAL,CAgBGvB,IAhBH,CAgBSG,MAAD,IAAY;AAChB,iBAAOA,MAAM,CAACD,IAAP,EAAP;AACD,SAlBH,EAmBGF,IAnBH,CAmBSG,MAAD,IAAY;AAChB,cAAI,CAACA,MAAM,CAACiC,IAAZ,EAAkB;AAChBC,YAAAA,KAAK,CAAClC,MAAM,CAACmC,OAAR,CAAL;AACD;AACF,SAvBH;AAwBD,OAzBD,MAyBO;AACL,aAAKjD,KAAL,CAAWgE,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACD;AACF,KAxN8B;;AAAA,SAyN/BC,aAzN+B,GAyNf,MAAM;AACpBb,MAAAA,OAAO,CAACC,GAAR,CAAa,KAAKnE,KAAL,CAAWC,OAAxB,EAAgC,qBAAhC;AACA,UAAI+E,GAAG,GAAG,EAAV;AACA,WAAKhF,KAAL,CAAWC,OAAX,CAAmBsD,GAAnB,CAAuB,CAAC0B,MAAD,EAASC,CAAT,KAAe;AACpC;AACAF,QAAAA,GAAG,CAACF,IAAJ,eACE,oBAAC,MAAD;AACE,UAAA,GAAG,EAAG,OAAMI,CAAE,EADhB;AAEE,UAAA,MAAM,EAAED,MAFV;AAGE,UAAA,OAAO,EAAEA,MAAM,CAACZ,UAHlB;AAIE,UAAA,aAAa,EAAE,KAAKpB,aAJtB;AAKE,UAAA,CAAC,EAAEiC,CALL;AAME,UAAA,KAAK,EAAE,KAAKrE,KAAL,CAAWiB,KANpB;AAOE,UAAA,IAAI,EAAE,KAAKjB,KAAL,CAAWC,IAPnB;AAQE,UAAA,IAAI,EAAE,KAAKD,KAAL,CAAWkC,IARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,OAdD;AAeA,0BACE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAC,mBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGiC,GADH,CADF;AAKD,KAhP8B;;AAAA,SAiP/BG,iBAjP+B,GAiPX,MAAM;AACxB,UAAIH,GAAG,GAAG,EAAV;;AACA,UAAI,KAAKhF,KAAL,CAAWQ,QAAX,CAAoB4E,MAApB,GAA6B,CAAjC,EAAoC;AAClC,aAAKpF,KAAL,CAAWQ,QAAX,CAAoB+C,GAApB,CAAwB,CAACP,OAAD,EAAUkC,CAAV,KAAgB;AACtCF,UAAAA,GAAG,CAACF,IAAJ,eACE;AAAK,YAAA,SAAS,EAAC,cAAf;AAA8B,YAAA,GAAG,EAAG,gBAAeI,CAAE,EAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAG,YAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BACE;AAAM,YAAA,KAAK,EAAE;AAAEG,cAAAA,QAAQ,EAAE,MAAZ;AAAoBC,cAAAA,UAAU,EAAE;AAAhC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI,GAAEtC,OAAO,CAACuC,SAAU,IADxB,CADF,EAIGvC,OAAO,CAACA,OAJX,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AACE,YAAA,SAAS,EAAC,cADZ;AAEE,YAAA,KAAK,EAAE;AAAEqC,cAAAA,QAAQ,EAAE,KAAZ;AAAmBC,cAAAA,UAAU,EAAE;AAA/B,aAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAIG,CAACtC,OAAO,CAACuB,IAAT,GACG,EADH,GAEG5E,MAAM,CAACqD,OAAO,CAACuB,IAAT,CAAN,CAAqBvD,MAArB,CAA4B,wBAA5B,CANN,CANF,CADF,CADF;AAmBD,SApBD;AAqBD;;AACD,UAAI,KAAKH,KAAL,CAAWiB,KAAf,EAAsB;AACpB,4BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,GAAG,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGkD,GADH,eAEE;AAAM,UAAA,QAAQ,EAAE,KAAKZ,aAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AACE,UAAA,EAAE,EAAC,WADL;AAEE,UAAA,KAAK,EAAE,KAAKpE,KAAL,CAAWS,UAAX,CAAsBuC,OAAtB,IAA+B,EAFxC;AAGE,UAAA,QAAQ,EAAGhB,CAAD,IAAO,KAAKc,aAAL,CAAmBd,CAAnB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,eAQE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBARF,CAFF,CADF;AAiBD,OAlBD,MAkBO;AACL,4BACE;AAAK,UAAA,SAAS,EAAC,eAAf;AAA+B,UAAA,GAAG,EAAC,eAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGgD,GADH,CADF;AAKD;AACF,KAnS8B;;AAAA,SAoS/BQ,eApS+B,GAoSZjF,QAAD,IAAc;AAC9B,UAAIA,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,eAAO,UAAP;AACD,OAFD,MAEO,IAAIA,QAAQ,KAAK,SAAjB,EAA4B;AACjC,eAAO,YAAP;AACD,OAFM,MAEA,IAAIA,QAAQ,KAAK,SAAjB,EAA4B;AACjC,eAAO,UAAP;AACD;AACF,KA5S8B;;AAAA,SA6S/BkF,UA7S+B,GA6SlB,MAAM;AACjB,YAAMC,GAAG,GAAG,IAAIlB,IAAJ,EAAZ;;AAEA,UAAI,KAAK3D,KAAL,CAAWiB,KAAf,EAAsB;AACpB,cAAM6D,KAAK,GAAG;AACZC,UAAAA,QAAQ,EAAE;AADE,SAAd;;AAIA,YAAI,KAAK5F,KAAL,CAAWE,GAAf,EAAoB;AAClByF,UAAAA,KAAK,CAACE,eAAN,GAAyB,QAAO,KAAK7F,KAAL,CAAWE,GAAI,IAA/C;AACAyF,UAAAA,KAAK,CAACG,MAAN,GAAe,MAAf;AACD,SAHD,MAGO;AACLH,UAAAA,KAAK,CAACE,eAAN,GAAwB,EAAxB;AACAF,UAAAA,KAAK,CAACG,MAAN,GAAe,MAAf;AACD;;AACD,4BACE;AACE,UAAA,SAAS,EAAC,qBADZ;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,KAAKlF,KAAL,CAAWmF;AADb,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAME;AACE,UAAA,SAAS,EAAC,eADZ;AAEE,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE,KAAKlF,KAAL,CAAWmF;AAApB,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AACE,UAAA,EAAE,EAAC,OADL;AAEE,UAAA,KAAK,EAAEL,KAFT;AAGE,UAAA,QAAQ,EAAE,KAAKzC,SAHjB;AAIE,UAAA,OAAO,EAAC,qBAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAME;AACE,UAAA,SAAS,EAAC,aADZ;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,IAAI,EAAC,QAHP;AAIE,UAAA,EAAE,EAAC,QAJL;AAKE,UAAA,QAAQ,EAAGlB,CAAD,IAAO,KAAKD,SAAL,CAAeC,CAAf,CALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,eAaE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,EAAE,EAAC,qBAFL;AAGE,UAAA,SAAS,EAAC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAbF,CAJF,eAuBE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKnB,KAAL,CAAWC,IAAX,CAAgB4D,KAAhB,CAAsBuB,WAAtB,EADH,CAvBF,eA0BE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKpF,KAAL,CAAWC,IAAX,CAAgB6D,WADnB,eAEE;AAAG,UAAA,IAAI,EAAG,GAAE,KAAK9D,KAAL,CAAWC,IAAX,CAAgB8D,GAAI,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CA1BF,eA8BE,oBAAC,IAAD;AAAM,UAAA,QAAQ,EAAG5C,CAAD,IAAO,KAAKyC,YAAL,CAAkBzC,CAAlB,CAAvB;AAA6C,UAAA,EAAE,EAAC,gBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,aAAD;AACE,UAAA,WAAW,EAAE0D,GADf;AAEE,UAAA,EAAE,EAAC,gBAFL;AAGE,UAAA,SAAS,EAAC,gBAHZ;AAIE,UAAA,IAAI,EAAC,UAJP;AAKE,UAAA,WAAW,EAAC,UALd;AAME,UAAA,KAAK,EAAE,KAAK1F,KAAL,CAAWK,QANpB;AAOE,UAAA,YAAY,EAAC,OAPf;AAQE,UAAA,QAAQ,EAAE,KAAKqC,YARjB;AASE,UAAA,KAAK,EAAE;AAAEqD,YAAAA,KAAK,EAAE,MAAT;AAAiBG,YAAAA,MAAM,EAAE,MAAzB;AAAiCC,YAAAA,OAAO,EAAE;AAA1C,WATT;AAUE,UAAA,cAAc,EAAC,kBAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAaE;AACE,UAAA,KAAK,EAAE,KAAKnG,KAAL,CAAWO,QADpB;AAEE,UAAA,QAAQ,EAAGyB,CAAD,IAAO,KAAKa,UAAL,CAAgBb,CAAhB,CAFnB;AAGE,UAAA,EAAE,EAAC,aAHL;AAIE,UAAA,KAAK,EAAE;AAAEkE,YAAAA,MAAM,EAAE,MAAV;AAAkBC,YAAAA,OAAO,EAAE;AAA3B,WAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAME;AACE,UAAA,KAAK,EAAG,GAAE,KAAKnG,KAAL,CAAWO,QAAS,EADhC;AAEE,UAAA,KAAK,EAAE;AACL6F,YAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWO,QADb;AAEL8E,YAAAA,QAAQ,EAAE,MAFL;AAGLC,YAAAA,UAAU,EAAE;AAHP,WAFT;AAOE,UAAA,YAAY,MAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASG,KAAKE,eAAL,CAAqB,KAAKxF,KAAL,CAAWO,QAAhC,CATH,CANF,eAiBE;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBF,eAkBE;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBF,eAmBE;AAAQ,UAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAnBF,CAbF,eAmCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAnCF,eAoCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UApCF,eAqCE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,EAAE,EAAC,eAFL;AAGE,UAAA,SAAS,EAAC,mBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UArCF,CA9BF,EAyEG,KAAK4E,iBAAL,EAzEH,EA0EG,KAAKJ,aAAL,EA1EH,eA2EE;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,OAAO,EAAG/C,CAAD,IAAO,KAAK+B,WAAL,CAAiB/B,CAAjB,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eA3EF,CANF,CADF;AA2FD,OAvGD,MAuGO;AACL,cAAM2D,KAAK,GAAG;AACZC,UAAAA,QAAQ,EAAE;AADE,SAAd;;AAIA,YAAI,KAAK5F,KAAL,CAAWE,GAAX,KAAmB,EAAvB,EAA2B;AACzByF,UAAAA,KAAK,CAACE,eAAN,GAAyB,QAAO,KAAK7F,KAAL,CAAWE,GAAI,IAA/C;AACAyF,UAAAA,KAAK,CAACG,MAAN,GAAe,MAAf;AACD,SAHD,MAGO;AACLH,UAAAA,KAAK,CAACE,eAAN,GAAwB,EAAxB;AACAF,UAAAA,KAAK,CAACG,MAAN,GAAe,MAAf;AACD;;AACD,4BACE;AACE,UAAA,SAAS,EAAC,qBADZ;AAEE,UAAA,KAAK,EAAE;AACLC,YAAAA,KAAK,EAAE,KAAKlF,KAAL,CAAWmF;AADb,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAME;AACE,UAAA,SAAS,EAAC,eADZ;AAEE,UAAA,KAAK,EAAE;AAAED,YAAAA,KAAK,EAAE,KAAKlF,KAAL,CAAWmF;AAApB,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AAAK,UAAA,EAAE,EAAC,OAAR;AAAgB,UAAA,KAAK,EAAEL,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,eAKE;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAK9E,KAAL,CAAWC,IAAX,CAAgB4D,KAAhB,CAAsBuB,WAAtB,EADH,CALF,eAQE;AAAG,UAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACG,KAAKpF,KAAL,CAAWC,IAAX,CAAgB6D,WADnB,eAEE;AACE,UAAA,SAAS,EAAC,uBADZ;AAEE,UAAA,IAAI,EAAG,GAAE,KAAK9D,KAAL,CAAWC,IAAX,CAAgB8D,GAAI,EAF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,SAFF,eAQE;AACE,UAAA,SAAS,EAAC,uBADZ;AAEE,UAAA,KAAK,EAAE;AACLwB,YAAAA,KAAK,EAAE,SADF;AAELL,YAAAA,KAAK,EAAE,MAFF;AAGLD,YAAAA,MAAM,EAAE,KAHH;AAILO,YAAAA,MAAM,EAAE;AAJH,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WASG,KAAKrG,KAAL,CAAWK,QATd,EASwB,GATxB,CARF,CARF,eA4BE;AAAK,UAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAOE;AACE,UAAA,SAAS,EAAC,kBADZ;AAEE,UAAA,KAAK,EAAE;AACL6F,YAAAA,MAAM,EAAG,cAAa,KAAKlG,KAAL,CAAWO,QAAS;AADrC,WAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAMG,KAAKiF,eAAL,CAAqB,KAAKxF,KAAL,CAAWO,QAAhC,CANH,CAPF,CA5BF,EA4CG,KAAK4E,iBAAL,EA5CH,EA6CG,KAAKJ,aAAL,EA7CH,CANF,CADF;AAwDD;AACF,KA5d8B;AAAA;;AA6d/BuB,EAAAA,MAAM,GAAG;AACP,wBACE;AACE,MAAA,SAAS,EAAC,WADZ;AAEE,MAAA,KAAK,EAAE;AACLP,QAAAA,KAAK,EAAE,KAAKlF,KAAL,CAAW0F,SADb;AAELC,QAAAA,IAAI,EAAE,KAAK3F,KAAL,CAAW4F,QAFZ;AAGLC,QAAAA,YAAY,EAAE,KAAK7F,KAAL,CAAW8F,UAHpB;AAILC,QAAAA,UAAU,EAAE,KAAK/F,KAAL,CAAWgG;AAJlB,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKpB,UAAL,EATH,CADF;AAaD;;AA3e8B;;AA8ejC,eAAe1F,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport opensocket from \"socket.io-client\";\nimport moment from \"moment\";\nimport Member from \"./Member\";\nimport { DateTimeInput } from \"semantic-ui-calendar-react\";\nimport { Form } from \"semantic-ui-react\";\n\nclass TaskPage extends Component {\n  state = {\n    members: [],\n    pic: \"\",\n    image: {},\n    optionDisplay: \"none\",\n    deadline: \"\",\n    datetime: \"\",\n    priority: \"\",\n    comments: [],\n    newComment: {},\n  };\n  componentDidMount = () => {\n    this.getMembers();\n    this.fetchComments();\n    if (this.props.task.deadline) {\n      this.setState({\n        deadline: moment(this.props.task.deadline).format(\n          \"MMMM Do YYYY, HH:mm a \"\n        ),\n        datetime: this.props.task.deadline,\n        priority: this.props.task.priority,\n      });\n    } else {\n      this.setState({\n        deadline: \"\",\n        datetime: this.props.task.deadline,\n        priority: this.props.task.priority,\n      });\n    }\n    if (this.props.task.pic !== \"\") {\n      this.setState({\n        pic: `http://localhost:8080/${this.props.task.pic}`,\n      });\n    } else {\n      this.setState({\n        pic: \"\",\n      });\n    }\n    const socket = opensocket(\"http://localhost:8080\");\n    socket.on(\"taskComment\", (data) => {\n      if (data.action === \"create\" ) {\n        this.fetchComments();\n      }\n    });\n    socket.on(\"taskMember\", (data) => {\n      if (data.action === \"create\"||data.action === \"delete\") {\n        this.getMembers();\n      }\n    });\n    socket.on(\"taskImg\", (data) => {\n      if (data.action === \"create\") {\n        this.setState({ pic: `http://localhost:8080/${data.img}` });\n      }\n    });\n  };\n  fetchComments = () => {\n    fetch(`http://localhost:8080/comments/${this.props.task._id}`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        this.setState({ comments: result.comments });\n      });\n  };\n  getMembers = () => {\n    fetch(`http://localhost:8080/task-members/${this.props.task._id}`, {\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n      },\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        this.setState({ members: result.members });\n      });\n  };\n  createImg = (e) => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    this.setState({ pic: URL.createObjectURL(file) });\n    let image = Object.assign({}, this.state.image);\n    image[e.target.id] = e.target.files[0];\n    this.setState({ image });\n  };\n  handleChange = (e, { name, value }) => {\n    this.setState({\n      deadline: value,\n      datetime: value,\n    });\n  };\n  createEdit = (e) => {\n    this.setState({ priority: e.target.value });\n  };\n  createComment = (e) => {\n    this.setState({\n      newComment: { id: this.props.user, comment: e.target.value },\n    });\n  };\n  updateMembers = (members) => {\n    this.setState({ members });\n  };\n  submitImg = (e) => {\n    e.preventDefault();\n    if (this.props.task.creator === this.props.user) {\n      var formData = new FormData();\n      Object.keys(this.state.image).map((key) => {\n        formData.append(key, this.state.image[key]);\n      });\n      fetch(\n        `http://localhost:8080/taskImg/${this.props.user}-${this.props.task._id}`,\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + this.props.token,\n          },\n          body: formData,\n        }\n      )\n        .then((result) => {\n          return result.json();\n        })\n        .then((result) => {\n          if (result.done) {\n          } else {\n            alert(result.message);\n          }\n        });\n    } else {\n      alert(\"you are not eligible to change the picture\");\n    }\n  };\n  participate = (e) => {\n    e.preventDefault();\n    fetch(\"http://localhost:8080/task-members\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        task: this.props.task,\n        user: this.props.user,\n      }),\n    })\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        if (result.done) {\n          console.log(result,\">>>>>\")\n          // this.setState({ members :result.members});\n        } else {\n          alert(result.message);\n        }\n      });\n  };\n  submitComment = (e) => {\n    e.preventDefault();\n    this.setState({ newComment: {} });\n    fetch(`http://localhost:8080/task-comment`, {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        comment: this.state.newComment,\n        user: this.props.user,\n        responders: this.props.task.responders,\n        taskId: this.props.task._id,\n        date: new Date(),\n      }),\n    })\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        if (result.done) {\nthis.setState({newComment:{}})       \n } else {\n          alert(result.message);\n        }\n      });\n  };\n  submitChange = (e) => {\n    e.preventDefault();\n    if (this.props.token) {\n      fetch(\"http://localhost:8080/update-task\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          id: this.props.task._id,\n          title: this.props.task.title,\n          description: this.props.task.description,\n          priority: this.state.priority,\n          url: this.props.task.url || \"\",\n          deadline: this.state.datetime,\n          user: this.props.user,\n        }),\n      })\n        .then((result) => {\n          return result.json();\n        })\n        .then((result) => {\n          if (!result.done) {\n            alert(result.message);\n          }\n        });\n    } else {\n      this.props.history.push(\"/login\");\n    }\n  };\n  renderMembers = () => {\n    console.log( this.state.members,\">>>>>>>><<<<<<<<<<<\")\n    let all = [];\n    this.state.members.map((member, i) => {\n      // console.log(member,\"------------------->\")\n      all.push(\n        <Member\n          key={`img-${i}`}\n          member={member}\n          members={member.responders}\n          updateMembers={this.updateMembers}\n          i={i}\n          token={this.props.token}\n          task={this.props.task}\n          user={this.props.user}\n        />\n      );\n    });\n    return (\n      <div className=\"task-page-members\" key=\"task-page-members\">\n        {all}\n      </div>\n    );\n  };\n  renderCommentArea = () => {\n    let all = [];\n    if (this.state.comments.length > 0) {\n      this.state.comments.map((comment, i) => {\n        all.push(\n          <div className=\"comment-cube\" key={`comment-cube-${i}`}>\n            <p className=\"comment\">\n              <span style={{ fontSize: \"110%\", fontWeight: \"400\" }}>\n                {`${comment.commenter}: `}\n              </span>\n              {comment.comment}\n              <br />\n              <span\n                className=\"comment-date\"\n                style={{ fontSize: \"80%\", fontWeight: \"400\" }}\n              >\n                {!comment.date\n                  ? \"\"\n                  : moment(comment.date).format(\"MMMM Do YYYY, HH:mm a \")}\n              </span>\n            </p>\n          </div>\n        );\n      });\n    }\n    if (this.props.token) {\n      return (\n        <div className=\"comments-area\" key=\"comments-area\">\n          {all}\n          <form onSubmit={this.submitComment}>\n            <br />\n            <textarea\n              id=\"text-area\"\n              value={this.state.newComment.comment||\"\"}\n              onChange={(e) => this.createComment(e)}\n            ></textarea>\n            <br />\n            <button type=\"submit\" className=\"post-comment-btn\">\n              COMMENT\n            </button>\n          </form>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"comments-area\" key=\"comments-area\">\n          {all}\n        </div>\n      );\n    }\n  };\n  defaultPriority = (priority) => {\n    if (priority === \"#0aa7f5\") {\n      return \"STANDARD\";\n    } else if (priority === \"#EDF67D\") {\n      return \"FIXED DATE\";\n    } else if (priority === \"#ff006e\") {\n      return \"EXPEDITE\";\n    }\n  };\n  renderPage = () => {\n    const now = new Date();\n\n    if (this.props.token) {\n      const style = {\n        position: \"relative\",\n      };\n\n      if (this.state.pic) {\n        style.backgroundImage = `url(\"${this.state.pic}\")`;\n        style.height = \"40vh\";\n      } else {\n        style.backgroundImage = \"\";\n        style.height = \"10vh\";\n      }\n      return (\n        <div\n          className=\"task-page-container\"\n          style={{\n            width: this.props.overflowWidth,\n          }}\n        >\n          <div\n            className=\"task-overflow\"\n            style={{ width: this.props.overflowWidth }}\n          >\n            <form\n              id=\"input\"\n              style={style}\n              onSubmit={this.submitImg}\n              encType=\"multipart/form-data\"\n            >\n              <input\n                className=\"task-picUrl\"\n                type=\"file\"\n                name=\"picUrl\"\n                id=\"picUrl\"\n                onChange={(e) => this.createImg(e)}\n              />\n              <button\n                type=\"submit\"\n                id=\"task-img-update-btn\"\n                className=\"fas fa-pencil-alt\"\n              ></button>\n            </form>\n            <div className=\"task-page-name\">\n              {this.props.task.title.toUpperCase()}\n            </div>\n            <p className=\"task-page-desc\">\n              {this.props.task.description}\n              <a href={`${this.props.task.url}`}>LINK</a>\n            </p>\n            <Form onSubmit={(e) => this.submitChange(e)} id=\"edit-date-form\">\n              <DateTimeInput\n                initialDate={now}\n                id=\"date-timeInput\"\n                className=\"task-page-date\"\n                name=\"dateTime\"\n                placeholder=\"Deadline\"\n                value={this.state.deadline}\n                iconPosition=\"right\"\n                onChange={this.handleChange}\n                style={{ width: \"40vw\", border: \"none\", outline: \"none\" }}\n                dateTimeFormat=\"YYYY-MM-DD HH:mm\"\n              />\n              <select\n                value={this.state.priority}\n                onChange={(e) => this.createEdit(e)}\n                id=\"edit-select\"\n                style={{ border: \"none\", outline: \"none\" }}\n              >\n                <option\n                  value={`${this.state.priority}`}\n                  style={{\n                    color: this.state.priority,\n                    fontSize: \"300%\",\n                    fontWeight: \"bolder\",\n                  }}\n                  defaultValue\n                >\n                  {this.defaultPriority(this.state.priority)}\n                </option>\n                <option value=\"#0aa7f5\">STANDARD</option>\n                <option value=\"#EDF67D\">FIXED DATE</option>\n                <option value=\"#ff006e\">EXPEDITE</option>\n                {/* DD1E00 ,  FE23BA */}\n              </select>\n              <br />\n              <br />\n              <button\n                type=\"submit\"\n                id=\"update-button\"\n                className=\"fas fa-pencil-alt\"\n              />\n            </Form>\n            {this.renderCommentArea()}\n            {this.renderMembers()}\n            <div\n              className=\"participate-btn\"\n              onClick={(e) => this.participate(e)}\n            >\n              +\n            </div>\n          </div>\n        </div>\n      );\n    } else {\n      const style = {\n        position: \"relative\",\n      };\n\n      if (this.state.pic !== \"\") {\n        style.backgroundImage = `url(\"${this.state.pic}\")`;\n        style.height = \"40vh\";\n      } else {\n        style.backgroundImage = \"\";\n        style.height = \"10vh\";\n      }\n      return (\n        <div\n          className=\"task-page-container\"\n          style={{\n            width: this.props.overflowWidth,\n          }}\n        >\n          <div\n            className=\"task-overflow\"\n            style={{ width: this.props.overflowWidth }}\n          >\n            <div id=\"input\" style={style}></div>\n            <div className=\"task-page-name\">\n              {this.props.task.title.toUpperCase()}\n            </div>\n            <p className=\"task-page-desc\">\n              {this.props.task.description}\n              <a\n                className=\"task-page-link-inside\"\n                href={`${this.props.task.url}`}\n              >\n                <span></span>LINK\n              </a>\n              <span\n                className=\"task-page-date-inside\"\n                style={{\n                  color: \"#ff006e\",\n                  width: \"66vw\",\n                  height: \"3vh\",\n                  margin: \"1vh 0\",\n                }}\n              >\n                {this.state.deadline}{\" \"}\n              </span>\n            </p>\n            <div id=\"edit-date-form\">\n              {/* <div  id=\"date-timeInput\" \n            className=\"task-page-date\"\n            style={{color:\"#ff006e\", width:\"66vw\",height:\"3vh\",margin:\"1vh 0\"}}\n            >\n            {this.state.deadline}\n            </div> */}\n              <div\n                className=\"edit-date-form-p\"\n                style={{\n                  border: `solid .1px ${this.state.priority}`,\n                }}\n              >\n                {this.defaultPriority(this.state.priority)}\n              </div>\n            </div>\n            {this.renderCommentArea()}\n            {this.renderMembers()}\n          </div>\n        </div>\n      );\n    }\n  };\n  render() {\n    return (\n      <div\n        className=\"task-page\"\n        style={{\n          width: this.props.pageWidth,\n          left: this.props.pageLeft,\n          borderRadius: this.props.pageRadius,\n          alignItems: this.props.flexFlow,\n        }}\n      >\n        {this.renderPage()}\n      </div>\n    );\n  }\n}\n\nexport default TaskPage;\n"]},"metadata":{},"sourceType":"module"}