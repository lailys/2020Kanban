{"ast":null,"code":"var _jsxFileName = \"/Users/lailysarvarian/a-kanban/client/src/components/Card.js\";\nimport React, { Component } from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { DragSource, DropTarget } from \"react-dnd\";\nimport flow from \"lodash/flow\";\nimport { Link } from \"react-router-dom\";\nimport opensocket from \"socket.io-client\";\nimport moment from \"moment\";\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      members: [],\n      deadline: \"\",\n      display: \"none\"\n    };\n\n    this.componentDidMount = () => {\n      const socket = opensocket(\"http://localhost:8080\");\n      this.fetchMembers();\n      this.setState({\n        deadline: !this.props.card.deadline ? \"\" : moment(this.props.card.deadline).format(\"MMMM Do YYYY, HH:mm a \")\n      });\n      socket.on(\"taskMember\", data => {\n        if (data.action === \"create\") {\n          this.fetchMembers();\n        }\n      });\n    };\n\n    this.fetchMembers = () => {\n      fetch(`/task-members/${this.props.card._id}`, {\n        headers: {\n          Authorization: \"Bearer \"\n        }\n      }).then(res => {\n        return res.json();\n      }).then(result => {\n        this.setState({\n          members: result.members\n        });\n      });\n    };\n\n    this.renderRemove = () => {\n      return this.props.token ? /*#__PURE__*/React.createElement(\"span\", {\n        id: \"user-page-span\",\n        onClick: e => this.props.removeTask(e, this.props.card.team, this.props.card._id, this.props.card.stage, this.props.position),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, \"-\") : /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      });\n    };\n\n    this.displayModal = e => {\n      this.state.display === \"flex\" ? this.setState({\n        display: \"none\"\n      }) : this.setState({\n        display: \"flex\"\n      });\n    };\n\n    this.removeTask = e => {\n      if (this.props.token) {\n        fetch(`/tasks/${this.props.id}`, {\n          method: \"DELETE\",\n          headers: {\n            Authorization: \"Bearer \" + this.props.token,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            user: localStorage.getItem(\"userId\"),\n            team: this.props.card.team,\n            task: this.props.id,\n            stage: this.props.card.stage,\n            i: this.props.position\n          })\n        }).then(result => {\n          return result.json();\n        }).then(res => {\n          if (!res.done) {\n            alert(res.message);\n          }\n        });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    };\n  }\n\n  render() {\n    const {\n      card,\n      isDragging,\n      connectDragSource,\n      connectDropTarget\n    } = this.props;\n    const members = this.state.members;\n    const opacity = isDragging ? 0.5 : 1;\n    return connectDragSource(connectDropTarget( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-cube\",\n      id: `id-${this.props.id}+${this.props.position}`,\n      style: {\n        opacity\n      },\n      index: \"whatttt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-bookmark\",\n      id: `bookmark-${this.props.id}+${this.props.position}`,\n      style: {\n        color: card.priority\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-title\",\n      id: `cube-${this.props.id}+${this.props.position}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, card.title.toUpperCase()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"task-cube-middle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      id: \"link\",\n      className: \"fas fa-question\",\n      to: `/${this.props.team.title}/${card._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"member-count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"member-sign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-user-friends\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"count\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }, card.responders.length)), this.props.card.deadline ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"deadline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"cube-deadline\",\n      style: {\n        opacity: this.state.timeOpacity\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 19\n      }\n    }, !this.props.card.deadline ? \"\" : moment(this.props.card.deadline).format(\"MMMM Do YYYY, HH:mm a \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fas fa-clock\",\n      onMouseOver: e => {\n        this.setState({\n          timeOpacity: \"1\"\n        });\n      },\n      onMouseLeave: e => {\n        this.setState({\n          timeOpacity: \"0\"\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"deadline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"members-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, this.props.card.responders.map((member, i) => {\n      let style = {};\n      style = {\n        position: \"absolute\",\n        right: `${i * 2}vh`,\n        top: \"0\",\n        backgroundImage: \"none\",\n        color: \"white\",\n        backgroundColor: member.color\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: `img-${i}`,\n        className: \"task-img\",\n        style: style,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }\n      }, `${member.name.split(\" \")[0][0].toUpperCase()}\n                        ${member.name.split(\" \")[1][0].toUpperCase()}`));\n    })))));\n  }\n\n}\n\nconst cardSource = {\n  beginDrag(props, monitor, component) {\n    const hoverBoundingRect = findDOMNode(component).getBoundingClientRect();\n    return {\n      index: props.index,\n      listId: props.listId,\n      card: props.card,\n      cardBottom: hoverBoundingRect.bottom,\n      cardTop: hoverBoundingRect.top\n    };\n  },\n\n  endDrag(props, monitor) {\n    const item = monitor.getItem();\n    const dropResult = monitor.getDropResult();\n\n    if (dropResult && dropResult.listId !== item.listId) {\n      props.removeCard(item.index);\n    }\n  }\n\n};\nconst cardTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n    const sourceListId = monitor.getItem().listId;\n    const draggedItem = monitor.getItem().card;\n    const draggedBottom = monitor.getItem().cardBottom;\n    const draggedTop = monitor.getItem().cardTop; // Don't replace items with themselves\n\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n\n    const draggedHeight = draggedBottom - draggedTop; // Determine rectangle on screen\n\n    const hoverBoundingRect = findDOMNode(component).getBoundingClientRect(); // Get vertical middle\n\n    const hoverY = hoverBoundingRect.bottom - hoverBoundingRect.top; // Determine mouse position\n\n    const clientOffset = monitor.getClientOffset(); // Get pixels to the top\n\n    const hoverClientY = clientOffset.y - hoverBoundingRect.top; // Dragging downwards\n\n    if (dragIndex < hoverIndex && hoverClientY < hoverY / 400) {\n      return;\n    } // Dragging upwards\n\n\n    if (dragIndex > hoverIndex && hoverClientY / 4 > hoverY) {\n      return;\n    }\n\n    if (props.listId === sourceListId) {\n      props.moveCard(dragIndex, hoverIndex, draggedItem);\n      monitor.getItem().index = hoverIndex;\n    }\n  }\n\n};\nexport default flow(DropTarget(\"CARD\", cardTarget, connect => ({\n  connectDropTarget: connect.dropTarget()\n})), DragSource(\"CARD\", cardSource, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n})))(Card);","map":{"version":3,"sources":["/Users/lailysarvarian/a-kanban/client/src/components/Card.js"],"names":["React","Component","findDOMNode","DragSource","DropTarget","flow","Link","opensocket","moment","Card","state","members","deadline","display","componentDidMount","socket","fetchMembers","setState","props","card","format","on","data","action","fetch","_id","headers","Authorization","then","res","json","result","renderRemove","token","e","removeTask","team","stage","position","displayModal","id","method","body","JSON","stringify","user","localStorage","getItem","task","i","done","alert","message","history","push","render","isDragging","connectDragSource","connectDropTarget","opacity","color","priority","title","toUpperCase","responders","length","timeOpacity","map","member","style","right","top","backgroundImage","backgroundColor","name","split","cardSource","beginDrag","monitor","component","hoverBoundingRect","getBoundingClientRect","index","listId","cardBottom","bottom","cardTop","endDrag","item","dropResult","getDropResult","removeCard","cardTarget","hover","dragIndex","hoverIndex","sourceListId","draggedItem","draggedBottom","draggedTop","draggedHeight","hoverY","clientOffset","getClientOffset","hoverClientY","y","moveCard","connect","dropTarget","dragSource"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { findDOMNode } from \"react-dom\";\nimport { DragSource, DropTarget } from \"react-dnd\";\nimport flow from \"lodash/flow\";\nimport { Link } from \"react-router-dom\";\nimport opensocket from \"socket.io-client\";\nimport moment from \"moment\";\n\n\n\nclass Card extends Component {\n  state = {\n    members: [],\n    deadline: \"\",\n    display: \"none\",\n  };\n  componentDidMount = () => {\n    const socket = opensocket(\"http://localhost:8080\");\n    this.fetchMembers();\n    this.setState({\n      deadline: !this.props.card.deadline\n        ? \"\"\n        : moment(this.props.card.deadline).format(\"MMMM Do YYYY, HH:mm a \"),\n    });\n    socket.on(\"taskMember\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchMembers();\n      }\n    });\n  };\n  fetchMembers = () => {\n    fetch(`/task-members/${this.props.card._id}`, {\n      headers: {\n        Authorization: \"Bearer \",\n      },\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        this.setState({ members: result.members });\n      });\n  };\n  renderRemove = () => {\n    return this.props.token ? (\n      <span\n        id=\"user-page-span\"\n        onClick={(e) =>\n          this.props.removeTask(\n            e,\n            this.props.card.team,\n            this.props.card._id,\n            this.props.card.stage,\n            this.props.position\n          )\n        }\n      >\n        -\n      </span>\n    ) : (\n      <span></span>\n    );\n  };\n  displayModal = (e) => {\n    this.state.display === \"flex\"\n      ? this.setState({ display: \"none\" })\n      : this.setState({ display: \"flex\" });\n  };\n  removeTask = (e) => {\n    if (this.props.token) {\n      fetch(`/tasks/${this.props.id}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          user: localStorage.getItem(\"userId\"),\n          team: this.props.card.team,\n          task: this.props.id,\n          stage: this.props.card.stage,\n          i: this.props.position,\n        }),\n      })\n        .then((result) => {\n          return result.json();\n        })\n        .then((res) => {\n          if (!res.done) {\n            alert(res.message);\n          }\n        });\n    } else {\n      this.props.history.push(\"/login\");\n    }\n  };\n  render() {\n    const {\n      card,\n      isDragging,\n      connectDragSource,\n      connectDropTarget,\n    } = this.props;\n    const members=this.state.members\n    const opacity = isDragging ? 0.5 : 1;\n    return connectDragSource(\n      connectDropTarget(\n          <div\n            className=\"task-cube\"\n            id={`id-${this.props.id}+${this.props.position}`}\n            style={{  opacity }}\n            index=\"whatttt\"\n          >\n            <i\n              className=\"fas fa-bookmark\"\n              id={`bookmark-${this.props.id}+${this.props.position}`}\n              style={{ color: card.priority }}\n            ></i>\n            <div\n              className=\"task-title\"\n              id={`cube-${this.props.id}+${this.props.position}`}\n            >\n              {card.title.toUpperCase()}\n            </div>\n            <div className=\"task-cube-middle\">\n              <Link\n                id=\"link\"\n                className=\"fas fa-question\"\n                to={`/${this.props.team.title}/${card._id}`}\n              ></Link>\n              <div className=\"member-count\">\n                <div className=\"member-sign\">\n                  <i className=\"fas fa-user-friends\"></i>\n                </div>\n                <div className=\"count\">{card.responders.length}</div>\n              </div>\n              {this.props.card.deadline ? (\n                <div className=\"deadline\">\n                  <div className=\"background\"></div>\n                  <div\n                    id=\"cube-deadline\"\n                    style={{ opacity: this.state.timeOpacity }}\n                  >\n                    {!this.props.card.deadline\n                      ? \"\"\n                      : moment(this.props.card.deadline).format(\n                          \"MMMM Do YYYY, HH:mm a \"\n                        )}\n                  </div>\n                  <div\n                    className=\"fas fa-clock\"\n                    onMouseOver={(e) => {\n                      this.setState({ timeOpacity: \"1\" });\n                    }}\n                    onMouseLeave={(e) => {\n                      this.setState({ timeOpacity: \"0\" });\n                    }}\n                  />\n                </div>\n              ) : (\n                <div className=\"deadline\"></div>\n              )}\n            </div>\n            <div className=\"members-container\">\n              {this.props.card.responders.map((member, i) => {\n                let style = {};\n                  (style = {\n                      position: \"absolute\",\n                      right: `${i * 2}vh`,\n                      top: \"0\",\n                      backgroundImage: \"none\",\n                      color: \"white\",\n                      backgroundColor: member.color,\n                    });\n                return(\n                  <div key={`img-${i}`} className=\"task-img\" style={style}>\n                    <div>\n                      {\n                        `${member.name.split(\" \")[0][0].toUpperCase()}\n                        ${member.name.split(\" \")[1][0].toUpperCase()}`\n                        }\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )\n    );\n  }\n}\nconst cardSource = {\n  beginDrag(props,monitor, component) {\n    const hoverBoundingRect = findDOMNode(component).getBoundingClientRect();\n    return {\n      index: props.index,\n      listId: props.listId,\n      card: props.card,\n      cardBottom:hoverBoundingRect.bottom,\n      cardTop:hoverBoundingRect.top\n    };\n  },\n  endDrag(props, monitor) {\n    const item = monitor.getItem();\n    const dropResult = monitor.getDropResult();\n    if (dropResult && dropResult.listId !== item.listId) {\n      props.removeCard(item.index);\n    }\n  },\n};\nconst cardTarget = {\n  hover(props, monitor, component) {\n    const dragIndex = monitor.getItem().index;\n    const hoverIndex = props.index;\n    const sourceListId = monitor.getItem().listId;\n    const draggedItem = monitor.getItem().card;\n    const draggedBottom = monitor.getItem().cardBottom;\n    const draggedTop = monitor.getItem().cardTop;\n    // Don't replace items with themselves\n    if (dragIndex === hoverIndex) {\n      return;\n    }\n    const draggedHeight=draggedBottom-draggedTop\n    // Determine rectangle on screen\n    const hoverBoundingRect = findDOMNode(component).getBoundingClientRect();\n    // Get vertical middle\n    const hoverY = (hoverBoundingRect.bottom - hoverBoundingRect.top) ;\n    // Determine mouse position\n    const clientOffset = monitor.getClientOffset();\n    // Get pixels to the top\n    const hoverClientY = (clientOffset.y - hoverBoundingRect.top);\n    // Dragging downwards\n    if (dragIndex < hoverIndex && hoverClientY < hoverY/400) {\n      return;\n    }\n    // Dragging upwards\n    if (dragIndex > hoverIndex && (hoverClientY/4) > hoverY) {\n      return;\n    }\n    if (props.listId === sourceListId) {\n      props.moveCard(dragIndex, hoverIndex, draggedItem);\n      monitor.getItem().index = hoverIndex;\n    }\n  },\n};\nexport default flow(\n  DropTarget(\"CARD\", cardTarget, (connect) => ({\n    connectDropTarget: connect.dropTarget(),\n  })),\n  DragSource(\"CARD\", cardSource, (connect, monitor) => ({\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  }))\n)(Card);\n"]},"metadata":{},"sourceType":"module"}