{"ast":null,"code":"var _jsxFileName = \"/Users/lailysarvarian/a-kanban/client/src/components/UserPage.js\";\nimport React, { Component } from \"react\";\nimport opensocket from \"socket.io-client\";\nimport Task from \"./Task\";\n\nclass UserPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: {},\n      responded: [],\n      requested: [],\n      pic: \"\",\n      image: {}\n    };\n\n    this.componentDidMount = () => {\n      this.fetchUserInfo();\n\n      if (this.props.user.pic === \"\") {\n        this.setState({\n          pic: \"\",\n          user: this.props.user\n        });\n      } else {\n        this.setState({\n          pic: `/${this.props.user.pic}`,\n          user: this.props.user\n        });\n      }\n\n      const socket = opensocket(\"http://localhost:8080\");\n      socket.on(\"task\", data => {\n        if (data.action === \"create\") {\n          this.fetchUserInfo(); // this.props.fetchUsers();\n        }\n      });\n      socket.on(\"taskChange\", data => {\n        if (data.action === \"create\") {\n          this.fetchUserInfo(); // this.props.fetchUsers();\n        }\n      });\n      socket.on(\"taskChange\", data => {\n        if (data.action === \"create\") {\n          this.fetchUserInfo(); // this.props.fetchUsers();\n        }\n      });\n      socket.on(\"taskMember\", data => {\n        if (data.action === \"create\" || data.action === \"delete\") {\n          this.fetchUserInfo(); // this.props.fetchUsers();\n        }\n      });\n      socket.on(\"userImg\", data => {\n        if (data.action === \"create\") {\n          this.fetchUserInfo(); // this.props.fetchUsers();\n          // this.setState({\n          //   pic: `http://localhost:8080/${data}`,\n          // });\n        }\n      });\n    };\n\n    this.fetchUserInfo = () => {\n      fetch(`/user/${this.props.user._id}`).then(res => {\n        return res.json();\n      }).then(result => {\n        console.log(result, \"yserpage\");\n        this.setState({\n          user: result.user,\n          responded: result.user.responded,\n          requested: result.user.requested\n        });\n      });\n    };\n\n    this.createimg = e => {\n      e.preventDefault();\n      const file = e.target.files[0];\n      this.setState({\n        pic: URL.createObjectURL(file)\n      });\n      let image = Object.assign({}, this.state.image);\n      image[e.target.id] = e.target.files[0];\n      this.setState({\n        image\n      });\n    };\n\n    this.renderRequested = () => {\n      console.log(this.state.user, \"yserpage555\");\n      let all = [];\n\n      if (this.state.requested.length > 0) {\n        this.state.requested.map((task, i) => {\n          const team = {\n            title: task.teamName\n          };\n          all.push( /*#__PURE__*/React.createElement(Task, {\n            userId: this.props.userId,\n            user: this.props.user,\n            taskId: `${task.stage}-${task._id}+${i}`,\n            token: this.props.token,\n            id: task._id,\n            key: `Task-${i}`,\n            task: task,\n            team: team,\n            position: i,\n            location1: \"left\",\n            location2: \"top\",\n            location2Digit: \"1vh\",\n            unit: \"vw\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 11\n            }\n          }));\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-req-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inside\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 9\n        }\n      }, all));\n    };\n\n    this.renderResponded = () => {\n      let all = [];\n\n      if (this.state.responded.length > 0) {\n        this.state.responded.map((task, i) => {\n          const team = {\n            title: task.teamName\n          };\n          all.push( /*#__PURE__*/React.createElement(Task, {\n            userId: this.props.userId,\n            user: this.props.user,\n            taskId: `${task.stage}-${task._id}+${i}`,\n            token: this.props.token,\n            id: task._id,\n            key: `Task-${i}`,\n            task: task,\n            team: team,\n            position: i,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 11\n            }\n          }));\n        });\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"user-res-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"inside\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 9\n        }\n      }, all));\n    };\n\n    this.submitImg = e => {\n      e.preventDefault();\n      var formData = new FormData();\n      Object.keys(this.state.image).map(key => {\n        formData.append(key, this.state.image[key]);\n      });\n      fetch(`/userImg/${this.props.userId}-${this.props.user._id}`, {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token\n        },\n        body: formData\n      }).then(result => {\n        return result.json();\n      }).then(result => {\n        if (result.done) {} else {\n          alert(result.message);\n        }\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      position: \"relative\"\n    };\n\n    if (this.state.pic !== \"\") {\n      style.backgroundImage = `url(\"${this.state.pic}\")`;\n    } else {\n      style.backgroundImage = \"\";\n    }\n\n    return this.props.token ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-page\",\n      style: {\n        width: this.props.pageWidth,\n        left: this.props.pageLeft,\n        borderRadius: this.props.pageRadius,\n        alignItems: this.props.flexFlow\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"user-overflow\",\n      style: {\n        width: this.props.overflowWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }, this.props.user._id === this.props.userId ? /*#__PURE__*/React.createElement(\"form\", {\n      style: style,\n      id: \"user-page-img\",\n      onSubmit: this.submitImg,\n      encType: \"multipart/form-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"task-picUrl2\",\n      type: \"file\",\n      name: \"picUrl\",\n      id: \"picUrl\",\n      onChange: e => this.createimg(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      id: \"add-edit-user-img-btn\",\n      className: \"fas fa-pencil-alt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      id: \"user-page-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, this.props.user.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-req\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"user-req-pan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }\n    }, \"REQUESTED\"), this.renderRequested()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-res\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"user-req-pan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, \"RESPONDED\"), this.renderResponded()))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-page\",\n      style: {\n        width: this.props.pageWidth,\n        left: this.props.pageLeft,\n        borderRadius: this.props.pageRadius,\n        alignItems: this.props.flexFlow\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"user-overflow\",\n      style: {\n        width: this.props.overflowWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      id: \"user-page-img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }\n    }, this.props.user.name), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-req\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"user-req-pan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, \"REQUESTED\"), this.renderRequested()), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-res\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"user-req-pan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 13\n      }\n    }, \"RESPONDED\"), this.renderResponded())));\n  }\n\n}\n\nexport default UserPage;","map":{"version":3,"sources":["/Users/lailysarvarian/a-kanban/client/src/components/UserPage.js"],"names":["React","Component","opensocket","Task","UserPage","state","user","responded","requested","pic","image","componentDidMount","fetchUserInfo","props","setState","socket","on","data","action","fetch","_id","then","res","json","result","console","log","createimg","e","preventDefault","file","target","files","URL","createObjectURL","Object","assign","id","renderRequested","all","length","map","task","i","team","title","teamName","push","userId","stage","token","renderResponded","submitImg","formData","FormData","keys","key","append","method","headers","Authorization","body","done","alert","message","render","style","position","backgroundImage","width","pageWidth","left","pageLeft","borderRadius","pageRadius","alignItems","flexFlow","overflowWidth","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport opensocket from \"socket.io-client\";\nimport Task from \"./Task\";\n\nclass UserPage extends Component {\n  state = {\n    user: {},\n    responded: [],\n    requested: [],\n    pic: \"\",\n    image: {},\n  };\n  componentDidMount = () => {\n    this.fetchUserInfo();\n    if (this.props.user.pic === \"\") {\n      this.setState({\n        pic: \"\",\n        user: this.props.user,\n      });\n    } else {\n      this.setState({\n        pic: `/${this.props.user.pic}`,\n        user: this.props.user,\n      });\n    }\n    const socket = opensocket(\"http://localhost:8080\");\n    socket.on(\"task\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchUserInfo();\n        // this.props.fetchUsers();\n      }\n    });\n    socket.on(\"taskChange\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchUserInfo();\n        // this.props.fetchUsers();\n      }\n    });\n    socket.on(\"taskChange\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchUserInfo();\n        // this.props.fetchUsers();\n      }\n    });\n    socket.on(\"taskMember\", (data) => {\n      if (data.action === \"create\"||data.action === \"delete\") {\n        this.fetchUserInfo();\n        // this.props.fetchUsers();\n      }\n    });\n    \n    socket.on(\"userImg\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchUserInfo();\n        // this.props.fetchUsers();\n        // this.setState({\n        //   pic: `http://localhost:8080/${data}`,\n        // });\n      }\n    });\n  };\n  fetchUserInfo = () => {\n    fetch(`/user/${this.props.user._id}`)\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        console.log(result,\"yserpage\")\n\n        this.setState({ user: result.user,\n          responded:result.user.responded,\n          requested:result.user.requested });\n      });\n  };\n  createimg = (e) => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    this.setState({ pic: URL.createObjectURL(file) });\n    let image = Object.assign({}, this.state.image);\n    image[e.target.id] = e.target.files[0];\n    this.setState({ image });\n  };\n  renderRequested = () => {\n    console.log(this.state.user,\"yserpage555\")\n\n    let all = [];\n    if (this.state.requested.length>0) {\n      this.state.requested.map((task, i) => {\n        const team = { title: task.teamName };\n        all.push(\n          <Task\n            userId={this.props.userId}\n            user={this.props.user}\n            taskId={`${task.stage}-${task._id}+${i}`}\n            token={this.props.token}\n            id={task._id}\n            key={`Task-${i}`}\n            task={task}\n            team={team}\n            position={i}\n            location1=\"left\"\n            location2=\"top\"\n            location2Digit=\"1vh\"\n            unit=\"vw\"\n          />\n        );\n      });\n    }\n    return (\n      <div className=\"user-req-container\">\n        <div className=\"inside\">{all}</div>\n      </div>\n    );\n  };\n  renderResponded = () => {\n    let all = [];\n    if (this.state.responded.length>0) {\n      this.state.responded.map((task, i) => {\n        const team = { title: task.teamName };\n        all.push(\n          <Task\n            userId={this.props.userId}\n            user={this.props.user}\n            taskId={`${task.stage}-${task._id}+${i}`}\n            token={this.props.token}\n            id={task._id}\n            key={`Task-${i}`}\n            task={task}\n            team={team}\n            position={i}\n          />\n        );\n      });\n    }\n    return (\n      <div className=\"user-res-container\">\n        <div className=\"inside\">{all}</div>\n      </div>\n    );\n  };\n  submitImg = (e) => {\n    e.preventDefault();\n    var formData = new FormData();\n    Object.keys(this.state.image).map((key) => {\n      formData.append(key, this.state.image[key]);\n    });\n    fetch(\n      `/userImg/${this.props.userId}-${this.props.user._id}`,\n      {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n        },\n        body: formData,\n      }\n    )\n      .then((result) => {\n        return result.json();\n      })\n      .then((result) => {\n        if (result.done) {\n  \n        } else {\n          alert(result.message);\n        }\n      });\n  };\n  render() {\n    const style = {\n      position: \"relative\",\n    };\n    if (this.state.pic !== \"\") {\n      style.backgroundImage = `url(\"${this.state.pic}\")`;\n    } else {\n      style.backgroundImage = \"\";\n    }\n    return this.props.token ? (\n      <div\n        className=\"user-page\"\n        style={{\n          width: this.props.pageWidth,\n          left: this.props.pageLeft,\n          borderRadius: this.props.pageRadius,\n          alignItems: this.props.flexFlow,\n        }}\n      >\n        <div id=\"user-overflow\" style={{ width: this.props.overflowWidth }}>\n          {this.props.user._id === this.props.userId ? (\n            <form\n              style={style}\n              id=\"user-page-img\"\n              onSubmit={this.submitImg}\n              encType=\"multipart/form-data\"\n            >\n              <input\n                className=\"task-picUrl2\"\n                type=\"file\"\n                name=\"picUrl\"\n                id=\"picUrl\"\n                onChange={(e) => this.createimg(e)}\n              />\n              <button\n                type=\"submit\"\n                id=\"add-edit-user-img-btn\"\n                className=\"fas fa-pencil-alt\"\n              />\n            </form>\n          ) : (\n            <div style={style} id=\"user-page-img\"></div>\n          )}\n          <div className=\"user-name\">{this.props.user.name}</div>\n          <div className=\"user-req\">\n            <span className=\"user-req-pan\">REQUESTED</span>\n            {this.renderRequested()}\n          </div>\n          <div className=\"user-res\">\n            <span className=\"user-req-pan\">RESPONDED</span>\n            {this.renderResponded()}\n          </div>\n        </div>\n      </div>\n    ) : (\n      <div\n        className=\"user-page\"\n        style={{\n          width: this.props.pageWidth,\n          left: this.props.pageLeft,\n          borderRadius: this.props.pageRadius,\n          alignItems: this.props.flexFlow,\n        }}\n      >\n        <div\n          id=\"user-overflow\"\n          style={{\n            width: this.props.overflowWidth,\n          }}\n        >\n          <div style={style} id=\"user-page-img\"></div>\n          <div className=\"user-name\">{this.props.user.name}</div>\n          <div className=\"user-req\">\n            <span className=\"user-req-pan\">REQUESTED</span>\n            {this.renderRequested()}\n          </div>\n\n          <div className=\"user-res\">\n            <span className=\"user-req-pan\">RESPONDED</span>\n            {this.renderResponded()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserPage;\n"]},"metadata":{},"sourceType":"module"}