{"ast":null,"code":"var _jsxFileName = \"/Users/lailysarvarian/a-kanban/client/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Router, Switch, Link } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport TeamSwitch from \"./components/TeamSwitch\";\nimport UserPage from \"./components/UserPage\";\nimport TeamPage from \"./components/TeamPage\";\nimport TaskPage from \"./components/TaskPage\";\nimport history from \"./components/History\";\nimport opensocket from \"socket.io-client\";\nimport axios from 'axios';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      authSign: \"fas fa-sign-in-alt\",\n      signupBtnDisplay: \"flex\",\n      sigoutBtnDisplay: \"none\",\n      id: \"login\",\n      loginDisplay: \"flex\",\n      teamPageDisplay: \"flex\",\n      teamDisplay: \"flex\",\n      homeDisplay: \"none\",\n      memberDisplay: \"none\",\n      expandedWidth: \"7.3vh\",\n      flexFlow: \"center\",\n      overflowWidth: \"91vw\",\n      pageLeft: \"5vw\",\n      pageWidth: \"94vw\",\n      pageRadius: \"0\",\n      taskWidth: \"91vw\",\n      menuSignId: \"\",\n      btnTitle: \"LOGIN\",\n      link: \"\",\n      teams: [],\n      tasks: [],\n      users: [],\n      isAuth: false,\n      token: null,\n      userId: null,\n      authLoading: false,\n      members: []\n    };\n\n    this.componentDidMount = () => {\n      const token = localStorage.getItem(\"token\");\n      const expiryDate = localStorage.getItem(\"expiryDate\");\n      const userId = localStorage.getItem(\"userId\");\n      const socket = opensocket(\"/\");\n      const remainingMilliseconds = new Date(expiryDate).getTime() - new Date().getTime();\n      this.fetchUsers();\n      this.fetchTasks();\n      this.fetchTeams();\n      this.setState({\n        isAuth: true,\n        token: token,\n        userId: userId\n      });\n      this.setAutoLogout(remainingMilliseconds);\n      socket.on(\"team\", data => {\n        if (data.action === \"create\") {\n          this.fetchTeams();\n        }\n      });\n      socket.on(\"loggedin\", data => {\n        if (data.action === \"create\") {\n          this.setState({\n            signupBtnDisplay: \"none\",\n            sigoutBtnDisplay: \"flex\",\n            loginDisplay: \"none\"\n          });\n        }\n      });\n      socket.on(\"task\", data => {\n        if (data.action === \"create\") {\n          this.fetchTasks();\n        }\n      });\n      socket.on(\"signup\", data => {\n        if (data.action === \"create\") {\n          this.fetchUsers();\n        }\n      });\n\n      if (new Date(expiryDate) <= new Date()) {\n        this.logout();\n        return;\n      }\n\n      this.setState({\n        userId,\n        token\n      });\n\n      if (!token) {\n        this.setState({\n          authSign: \"fas fa-sign-in-alt\",\n          signupBtnDisplay: \"flex\",\n          loginDisplay: \"flex\"\n        });\n      } else {\n        this.setState({\n          authSign: \"fas fa-sign-out-alt\",\n          signupBtnDisplay: \"none\",\n          sigoutBtnDisplay: \"flex\",\n          loginDisplay: \"none\"\n        });\n      }\n    };\n\n    this.fetchUsers = () => {\n      fetch(\"/allUsers\").then(res => {\n        return res.json();\n      }).then(result => {\n        this.setState({\n          users: result.users\n        });\n      });\n    };\n\n    this.fetchTeams = () => {\n      fetch(\"/teams\").then(res => {\n        return res.json();\n      }).then(result => {\n        this.setState({\n          teams: result.teams\n        });\n      });\n    };\n\n    this.fetchTasks = () => {\n      fetch(\"/tasks\", {}).then(res => {\n        return res.json();\n      }).then(result => {\n        this.setState({\n          tasks: result.tasks\n        });\n      });\n    };\n\n    this.setAutoLogout = milliseconds => {\n      setTimeout(() => {\n        this.logout();\n      }, milliseconds);\n    };\n\n    this.logout = () => {\n      localStorage.clear();\n      this.setState({\n        isAuth: false,\n        userId: null,\n        authSign: \"fas fa-sign-in-alt\",\n        signupBtnDisplay: \"flex\",\n        sigoutBtnDisplay: \"none\",\n        loginDisplay: \"flex\"\n      }); // history.push(\"/login\");\n    };\n\n    this.authChange = (id, token) => {\n      this.setState({\n        isAuth: true,\n        authLoading: false,\n        token: token,\n        userId: id,\n        sigoutBtnDisplay: \"flex\"\n      });\n      this.fetchTeams();\n    };\n\n    this.userPages = () => {\n      // if (this.state.users.length > 0) {\n      return this.state.users.map((user, i) => {\n        return /*#__PURE__*/React.createElement(Route, {\n          key: `user-${i}`,\n          exact: true,\n          path: `/users/${user._id}`,\n          render: () => /*#__PURE__*/React.createElement(UserPage, {\n            fetchUsers: this.fetchUsers,\n            user: user,\n            token: localStorage.getItem(\"token\"),\n            userId: localStorage.getItem(\"userId\"),\n            expiryDate: localStorage.getItem(\"expiryDate\"),\n            pageLeft: this.state.pageLeft,\n            pageWidth: this.state.pageWidth,\n            pageRadius: this.state.pageRadius,\n            taskWidth: this.state.taskWidth,\n            overflowWidth: this.state.overflowWidth,\n            flexFlow: this.state.flexFlow,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 11\n          }\n        });\n      }); // }\n    };\n\n    this.teamPages = () => {\n      // if (this.state.teams.length > 0) {\n      return this.state.teams.map((team, i) => {\n        return /*#__PURE__*/React.createElement(Route, {\n          key: `team-${i}`,\n          exact: true,\n          path: `/teams/${team._id}`,\n          render: () => /*#__PURE__*/React.createElement(TeamPage, {\n            title: team.title,\n            team: team,\n            history: history,\n            teamPageDisplay: this.state.teamPageDisplay,\n            members: this.fetchTaskMembers,\n            pageLeft: this.state.pageLeft,\n            pageWidth: this.state.pageWidth,\n            taskLeft: this.state.taskLeft,\n            pageRadius: this.state.pageRadius,\n            taskWidth: this.state.taskWidth,\n            overflowWidth: this.state.overflowWidth,\n            teamPageDisplaySwitch: this.teamPageDisplaySwitch,\n            token: localStorage.getItem(\"token\"),\n            user: localStorage.getItem(\"userId\"),\n            fetchTasks: this.fetchTasks,\n            movePage: this.movePage,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 11\n          }\n        });\n      }); // }\n    };\n\n    this.taskPages = () => {\n      if (this.state.tasks.length > 0) {\n        return this.state.tasks.map((task, i) => {\n          return /*#__PURE__*/React.createElement(Route, {\n            key: `rout-${i}`,\n            exact: true,\n            path: `/${task.teamName}/${task._id}`,\n            render: () => /*#__PURE__*/React.createElement(TaskPage, {\n              fetchTasks: this.fetchTasks,\n              task: task,\n              participate: this.participate,\n              user: localStorage.getItem(\"userId\"),\n              token: localStorage.getItem(\"token\"),\n              pageLeft: this.state.pageLeft,\n              pageWidth: this.state.pageWidth,\n              pageRadius: this.state.pageRadius,\n              taskWidth: this.state.taskWidth,\n              overflowWidth: this.state.overflowWidth,\n              flexFlow: this.state.flexFlow,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 15\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 11\n            }\n          });\n        });\n      }\n    };\n\n    this.authPages = () => {\n      let all = [];\n      const pages = [{\n        key: \"login\",\n        path: \"/login\"\n      }, {\n        key: \"signup\",\n        path: \"/signup\"\n      }, {\n        key: \"passwordUpdateReq\",\n        path: \"/password-Update-request\"\n      }, {\n        key: \"passwordUpdate\",\n        path: `/password-Update`\n      }];\n      pages.map(page => {\n        if (page.key === \"passwordUpdate\") {\n          all.push( /*#__PURE__*/React.createElement(Route, {\n            key: page.key,\n            path: page.path,\n            render: () => /*#__PURE__*/React.createElement(LoginPage, {\n              user: this.state.user,\n              token: localStorage.getItem(\"token\"),\n              link: page.key,\n              authPicker: this.authPicker,\n              history: history,\n              authChange: this.authChange,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 15\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 11\n            }\n          }));\n        } else {\n          all.push( /*#__PURE__*/React.createElement(Route, {\n            key: page.key,\n            exact: true,\n            path: page.path,\n            render: () => /*#__PURE__*/React.createElement(LoginPage, {\n              user: this.state.user,\n              token: localStorage.getItem(\"token\"),\n              link: page.key,\n              authPicker: this.authPicker,\n              history: history,\n              authChange: this.authChange,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 15\n              }\n            }),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 11\n            }\n          }));\n        }\n      });\n      all.push( /*#__PURE__*/React.createElement(Route, {\n        key: \"home\",\n        exact: true,\n        path: \"/\",\n        render: () => /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 61\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 14\n        }\n      }));\n      return /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 7\n        }\n      }, all, this.userPages(), this.teamPages(), this.taskPages());\n    };\n\n    this.authPicker = e => {\n      this.movePage(\"close\");\n\n      if (e.target.id === \"logout\") {\n        if (e.target.className.split(\" \")[1] === \"fa-sign-out-alt\") {\n          this.logout();\n        }\n\n        this.fetchTeams();\n        this.setState({\n          link: \"login\",\n          homeDisplay: \"flex\"\n        });\n      } else if (e.target.id === \"signup\") {\n        this.setState({\n          link: \"signup\",\n          homeDisplay: \"flex\"\n        });\n      }\n    };\n\n    this.home = e => {\n      this.movePage(\"close\");\n      this.setState({\n        link: \"\",\n        homeDisplay: \"none\"\n      });\n    };\n\n    this.buttonRender = () => {\n      if (this.state.user) {\n        return /*#__PURE__*/React.createElement(Link, {\n          to: this.state.link,\n          className: \"log-btn\",\n          id: this.state.navBtn,\n          onClick: e => this.authPicker(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 9\n          }\n        }, this.state.btnTitle);\n      } else {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"log-btn\",\n          id: this.state.navBtn,\n          onClick: e => this.authPicker(e),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 9\n          }\n        }, this.state.btnTitle);\n      }\n    };\n\n    this.switchTeams = () => {\n      return /*#__PURE__*/React.createElement(TeamSwitch, {\n        teamPageDisplaySwitch: this.teamPageDisplaySwitch,\n        token: localStorage.getItem(\"token\"),\n        user: localStorage.getItem(\"userId\"),\n        users: this.state.users,\n        teams: this.state.teams,\n        fetchTeams: this.fetchTeams,\n        expandedWidth: this.state.expandedWidth,\n        menuSignId: this.state.menuSignId,\n        history: history,\n        movePage: this.movePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 7\n        }\n      });\n    };\n\n    this.movePage = navStatus => {\n      if (navStatus === \"open\") {\n        this.setState({\n          menuSignId: \"first-btn\",\n          expandedWidth: \"18vw\",\n          overflowWidth: \"77vw\",\n          flexFlow: \"flex-end\",\n          pageWidth: \"79vw\",\n          pageLeft: \"19vw\",\n          pageRadius: \"15px\",\n          taskWidth: \"76.9vw\"\n        });\n      } else {\n        this.setState({\n          menuSignId: \"\",\n          expandedWidth: \"7.3vh\",\n          flexFlow: \"center\",\n          overflowWidth: \"91vw\",\n          pageWidth: \"94vw\",\n          pageLeft: \"5vw\",\n          pageRadius: \"0\",\n          taskWidth: \"91vw\"\n        });\n      }\n    };\n\n    this.teamPageDisplaySwitch = display => {\n      display === \"none\" ? this.setState({\n        teamPageDisplay: \"none\"\n      }) : this.setState({\n        teamPageDisplay: \"flex\"\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Router, {\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }\n    }, this.switchTeams(), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"signout-btn\",\n      onClick: e => this.authPicker(e),\n      style: {\n        display: this.state.sigoutBtnDisplay\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fas fa-sign-out-alt\",\n      id: \"logout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 13\n      }\n    })), this.authPages(), /*#__PURE__*/React.createElement(Link, {\n      to: \"/signup\",\n      className: \"signup-btn\",\n      style: {\n        display: this.state.signupBtnDisplay\n      },\n      onClick: e => this.movePage(\"close\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fas fa-user-plus\",\n      id: \"signup\",\n      onClick: e => this.authPicker(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/login\",\n      className: \"signin-btn\",\n      style: {\n        display: this.state.loginDisplay\n      },\n      onClick: e => this.movePage(\"close\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fas fa-sign-in-alt\",\n      id: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      className: \"back-home-btn \",\n      onClick: e => this.home(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 11\n      }\n    }, \"S\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/lailysarvarian/a-kanban/client/src/App.js"],"names":["React","Component","Route","Router","Switch","Link","LoginPage","TeamSwitch","UserPage","TeamPage","TaskPage","history","opensocket","axios","App","state","authSign","signupBtnDisplay","sigoutBtnDisplay","id","loginDisplay","teamPageDisplay","teamDisplay","homeDisplay","memberDisplay","expandedWidth","flexFlow","overflowWidth","pageLeft","pageWidth","pageRadius","taskWidth","menuSignId","btnTitle","link","teams","tasks","users","isAuth","token","userId","authLoading","members","componentDidMount","localStorage","getItem","expiryDate","socket","remainingMilliseconds","Date","getTime","fetchUsers","fetchTasks","fetchTeams","setState","setAutoLogout","on","data","action","logout","fetch","then","res","json","result","milliseconds","setTimeout","clear","authChange","userPages","map","user","i","_id","teamPages","team","title","fetchTaskMembers","taskLeft","teamPageDisplaySwitch","movePage","taskPages","length","task","teamName","participate","authPages","all","pages","key","path","page","push","authPicker","e","target","className","split","home","buttonRender","navBtn","switchTeams","navStatus","display","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { Route, Router, Switch, Link } from \"react-router-dom\";\nimport LoginPage from \"./components/LoginPage\";\nimport TeamSwitch from \"./components/TeamSwitch\";\nimport UserPage from \"./components/UserPage\";\nimport TeamPage from \"./components/TeamPage\";\nimport TaskPage from \"./components/TaskPage\";\nimport history from \"./components/History\";\nimport opensocket from \"socket.io-client\";\nimport axios from 'axios'\n\nclass App extends Component {\n  state = {\n    authSign: \"fas fa-sign-in-alt\",\n    signupBtnDisplay: \"flex\",\n    sigoutBtnDisplay: \"none\",\n    id: \"login\",\n    loginDisplay: \"flex\",\n    teamPageDisplay: \"flex\",\n    teamDisplay: \"flex\",\n    homeDisplay: \"none\",\n    memberDisplay: \"none\",\n    expandedWidth: \"7.3vh\",\n    flexFlow: \"center\",\n    overflowWidth: \"91vw\",\n    pageLeft: \"5vw\",\n    pageWidth: \"94vw\",\n    pageRadius: \"0\",\n    taskWidth: \"91vw\",\n    menuSignId: \"\",\n    btnTitle: \"LOGIN\",\n    link: \"\",\n    teams: [],\n    tasks: [],\n    users: [],\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    members: [],\n  };\n  componentDidMount = () => {\n\n\n\n    const token = localStorage.getItem(\"token\");\n    const expiryDate = localStorage.getItem(\"expiryDate\");\n    const userId = localStorage.getItem(\"userId\");\n    const socket = opensocket(\"/\");\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.fetchUsers();\n    this.fetchTasks();\n    this.fetchTeams();\n    this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n    socket.on(\"team\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchTeams();\n      }\n    });\n    socket.on(\"loggedin\", (data) => {\n      if (data.action === \"create\") {\n        this.setState({\n          signupBtnDisplay: \"none\",\n          sigoutBtnDisplay: \"flex\",\n          loginDisplay: \"none\",\n        });\n      }\n    });\n    socket.on(\"task\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchTasks();\n      }\n    });\n    socket.on(\"signup\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchUsers();\n      }\n    });\n\n    if (new Date(expiryDate) <= new Date()) {\n      this.logout();\n      return;\n    }\n    this.setState({ userId, token });\n    if (!token) {\n      this.setState({\n        authSign: \"fas fa-sign-in-alt\",\n        signupBtnDisplay: \"flex\",\n        loginDisplay: \"flex\",\n      });\n    } else {\n      this.setState({\n        authSign: \"fas fa-sign-out-alt\",\n        signupBtnDisplay: \"none\",\n        sigoutBtnDisplay: \"flex\",\n        loginDisplay: \"none\",\n      });\n    }\n  };\n\n  fetchUsers = () => {\n    fetch(\"/allUsers\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        this.setState({ users: result.users });\n      });\n  \n  };\n  fetchTeams = () => {\n    fetch(\"/teams\")\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        this.setState({ teams: result.teams });\n      });\n  };\n  fetchTasks = () => {\n    fetch(\"/tasks\", {})\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        this.setState({ tasks: result.tasks });\n      });\n  };\n  setAutoLogout = (milliseconds) => {\n    setTimeout(() => {\n      this.logout();\n    }, milliseconds);\n  };\n  logout = () => {\n    localStorage.clear();\n    this.setState({\n      isAuth: false,\n      userId: null,\n      authSign: \"fas fa-sign-in-alt\",\n      signupBtnDisplay: \"flex\",\n      sigoutBtnDisplay: \"none\",\n      loginDisplay: \"flex\",\n    });\n    // history.push(\"/login\");\n  };\n  authChange = (id, token) => {\n    this.setState({\n      isAuth: true,\n      authLoading: false,\n      token: token,\n      userId: id,\n      sigoutBtnDisplay: \"flex\",\n    });\n    this.fetchTeams();\n  };\n  userPages = () => {\n    // if (this.state.users.length > 0) {\n      return this.state.users.map((user, i) => {\n        return (\n          <Route\n            key={`user-${i}`}\n            exact\n            path={`/users/${user._id}`}\n            render={() => (\n              <UserPage\n                fetchUsers={this.fetchUsers}\n                user={user}\n                token={localStorage.getItem(\"token\")}\n                userId={localStorage.getItem(\"userId\")}\n                expiryDate={localStorage.getItem(\"expiryDate\")}\n                pageLeft={this.state.pageLeft}\n                pageWidth={this.state.pageWidth}\n                pageRadius={this.state.pageRadius}\n                taskWidth={this.state.taskWidth}\n                overflowWidth={this.state.overflowWidth}\n                flexFlow={this.state.flexFlow}\n              />\n            )}\n          />\n        );\n      });\n    // }\n  };\n  teamPages = () => {\n    // if (this.state.teams.length > 0) {\n      return this.state.teams.map((team, i) => {\n        return (\n          <Route\n            key={`team-${i}`}\n            exact\n            path={`/teams/${team._id}`}\n            render={() => (\n              <TeamPage\n                title={team.title}\n                team={team}\n                history={history}\n                teamPageDisplay={this.state.teamPageDisplay}\n                members={this.fetchTaskMembers}\n                pageLeft={this.state.pageLeft}\n                pageWidth={this.state.pageWidth}\n                taskLeft={this.state.taskLeft}\n                pageRadius={this.state.pageRadius}\n                taskWidth={this.state.taskWidth}\n                overflowWidth={this.state.overflowWidth}\n                teamPageDisplaySwitch={this.teamPageDisplaySwitch}\n                token={localStorage.getItem(\"token\")}\n                user={localStorage.getItem(\"userId\")}\n                fetchTasks={this.fetchTasks}\n                movePage={this.movePage}\n              />\n            )}\n          />\n        );\n      });\n    // }\n  };\n\n  taskPages = () => {\n    if (this.state.tasks.length > 0) {\n      return this.state.tasks.map((task, i) => {\n        return (\n          <Route\n            key={`rout-${i}`}\n            exact\n            path={`/${task.teamName}/${task._id}`}\n            render={() => (\n              <TaskPage\n                fetchTasks={this.fetchTasks}\n                task={task}\n                participate={this.participate}\n                user={localStorage.getItem(\"userId\")}\n                token={localStorage.getItem(\"token\")}\n                pageLeft={this.state.pageLeft}\n                pageWidth={this.state.pageWidth}\n                pageRadius={this.state.pageRadius}\n                taskWidth={this.state.taskWidth}\n                overflowWidth={this.state.overflowWidth}\n                flexFlow={this.state.flexFlow}\n              />\n            )}\n          />\n        );\n      });\n    }\n  };\n  authPages = () => {\n    let all = [];\n    const pages = [\n      { key: \"login\", path: \"/login\" },\n      { key: \"signup\", path: \"/signup\" },\n      { key: \"passwordUpdateReq\", path: \"/password-Update-request\" },\n      { key: \"passwordUpdate\", path: `/password-Update` },\n    ];\n    pages.map((page) => {\n      if (page.key === \"passwordUpdate\") {\n        all.push(\n          <Route\n            key={page.key}\n            path={page.path}\n            render={() => (\n              <LoginPage\n                user={this.state.user}\n                token={localStorage.getItem(\"token\")}\n                link={page.key}\n                authPicker={this.authPicker}\n                history={history}\n                authChange={this.authChange}\n              />\n            )}\n          />\n        );\n      } else {\n        all.push(\n          <Route\n            key={page.key}\n            exact\n            path={page.path}\n            render={() => (\n              <LoginPage\n                user={this.state.user}\n                token={localStorage.getItem(\"token\")}\n                link={page.key}\n                authPicker={this.authPicker}\n                history={history}\n                authChange={this.authChange}\n              />\n            )}\n          />\n        );\n      }\n    });\n    all.push(<Route key=\"home\" exact path=\"/\" render={() => <div></div>} />);\n    return (\n      <Switch>\n        {all}\n        {this.userPages()}\n        {this.teamPages()}\n        {this.taskPages()}\n      </Switch>\n    );\n  };\n\n  authPicker = (e) => {\n    this.movePage(\"close\");\n    if (e.target.id === \"logout\") {\n      if (e.target.className.split(\" \")[1] === \"fa-sign-out-alt\") {\n        this.logout();\n      }\n      this.fetchTeams();\n      this.setState({\n        link: \"login\",\n        homeDisplay: \"flex\",\n      });\n    } else if (e.target.id === \"signup\") {\n      this.setState({\n        link: \"signup\",\n        homeDisplay: \"flex\",\n      });\n    }\n  };\n\n  home = (e) => {\n    this.movePage(\"close\");\n    this.setState({\n      link: \"\",\n      homeDisplay: \"none\",\n    });\n  };\n  buttonRender = () => {\n    if (this.state.user) {\n      return (\n        <Link\n          to={this.state.link}\n          className=\"log-btn\"\n          id={this.state.navBtn}\n          onClick={(e) => this.authPicker(e)}\n        >\n          {this.state.btnTitle}\n        </Link>\n      );\n    } else {\n      return (\n        <div\n          className=\"log-btn\"\n          id={this.state.navBtn}\n          onClick={(e) => this.authPicker(e)}\n        >\n          {this.state.btnTitle}\n        </div>\n      );\n    }\n  };\n\n  switchTeams = () => {\n    return (\n      <TeamSwitch\n        teamPageDisplaySwitch={this.teamPageDisplaySwitch}\n        token={localStorage.getItem(\"token\")}\n        user={localStorage.getItem(\"userId\")}\n        users={this.state.users}\n        teams={this.state.teams}\n        fetchTeams={this.fetchTeams}\n        expandedWidth={this.state.expandedWidth}\n        menuSignId={this.state.menuSignId}\n        history={history}\n        movePage={this.movePage}\n      />\n    );\n  };\n  movePage = (navStatus) => {\n    if (navStatus === \"open\") {\n      this.setState({\n        menuSignId: \"first-btn\",\n        expandedWidth: \"18vw\",\n        overflowWidth: \"77vw\",\n        flexFlow: \"flex-end\",\n        pageWidth: \"79vw\",\n        pageLeft: \"19vw\",\n        pageRadius: \"15px\",\n        taskWidth: \"76.9vw\",\n      });\n    } else {\n      this.setState({\n        menuSignId: \"\",\n        expandedWidth: \"7.3vh\",\n        flexFlow: \"center\",\n        overflowWidth: \"91vw\",\n        pageWidth: \"94vw\",\n        pageLeft: \"5vw\",\n        pageRadius: \"0\",\n        taskWidth: \"91vw\",\n      });\n    }\n  };\n  teamPageDisplaySwitch = (display) => {\n    display === \"none\"\n      ? this.setState({ teamPageDisplay: \"none\" })\n      : this.setState({ teamPageDisplay: \"flex\" });\n  };\n  render() {\n    return (\n      <div className=\"container\">\n        <Router history={history}>\n          {this.switchTeams()}\n          <button\n            className=\"signout-btn\"\n            onClick={(e) => this.authPicker(e)}\n            style={{ display: this.state.sigoutBtnDisplay }}\n          >\n            <div className=\"fas fa-sign-out-alt\" id=\"logout\"></div>\n          </button>\n          {this.authPages()}\n          <Link\n            to=\"/signup\"\n            className=\"signup-btn\"\n            style={{ display: this.state.signupBtnDisplay }}\n            onClick={(e) => this.movePage(\"close\")}\n          >\n            <div\n              className=\"fas fa-user-plus\"\n              id=\"signup\"\n              onClick={(e) => this.authPicker(e)}\n            ></div>\n          </Link>\n          <Link\n            to=\"/login\"\n            className=\"signin-btn\"\n            style={{ display: this.state.loginDisplay }}\n            onClick={(e) => this.movePage(\"close\")}\n          >\n            <div className=\"fas fa-sign-in-alt\" id=\"login\" />\n          </Link>\n          <Link to=\"/\" className=\"back-home-btn \" onClick={(e) => this.home(e)}>\n            S\n          </Link>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}