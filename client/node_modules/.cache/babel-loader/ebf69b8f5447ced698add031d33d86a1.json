{"ast":null,"code":"var _jsxFileName = \"/Users/lailysarvarian/a-kanban/client/src/components/TeamPage.js\";\nimport React, { Component } from \"react\";\nimport opensocket from \"socket.io-client\";\nimport { DragDropContext } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport Container from \"./Container\";\nimport AddTasks from \"./AddTasks\";\nimport Task from \"./Task\";\nimport Search from \"./Search\";\n\nclass TeamPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      boards: [\"REQUESTED\", \"INPROGRESS\", \"DONE\", \"TRASH\"],\n      displayTask: \"none\",\n      display: \"flex\",\n      priority: \"\",\n      opacity: \"1\",\n      newTask: {\n        priority: \"#0aa7f5\",\n        stage: \"REQUESTED\"\n      },\n      teamTasks: {},\n      dragged: {},\n      draggedfrom: {},\n      sign: {\n        REQUESTED: \"fas fa-sort-up\",\n        INPROGRESS: \"fas fa-sort-up\",\n        DONE: \"fas fa-sort-up\"\n      },\n      date: \"\",\n      time: \"\",\n      dateTime: \"\",\n      datesRange: \"\",\n      selectedOption: null\n    };\n\n    this.componentDidMount = () => {\n      this.fetchTasks(\"na\", \"na\");\n      const socket = opensocket(\"http://localhost:8080\");\n      socket.on(\"task\", data => {\n        if (data.action === \"create\") {\n          this.fetchTasks(\"na\", \"na\");\n        }\n      });\n      socket.on(\"taskChange\", data => {\n        if (data.action === \"create\") {\n          this.fetchTasks(\"na\", \"na\");\n        }\n      });\n    };\n\n    this.fetchTasks = (priority, i) => {\n      fetch(`http://localhost:8080/team/tasks-${this.props.team._id}-${i}-${priority}`).then(res => {\n        return res.json();\n      }).then(result => {\n        this.setState({\n          teamTasks: result.tasks\n        });\n      });\n    };\n\n    this.handleChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.search = e => {};\n\n    this.submitTask = e => {\n      e.preventDefault();\n      this.setState({\n        display: \"flex\"\n      });\n\n      if (this.props.token) {\n        fetch(\"http://localhost:8080/tasks\", {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer \" + this.props.token,\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            title: this.state.newTask.title,\n            description: this.state.newTask.description,\n            creator: this.props.user,\n            priority: this.state.newTask.priority,\n            responder: [],\n            url: this.state.newTask.url || \"\",\n            stage: this.state.newTask.stage,\n            datetime: this.state.dateTime || \"\",\n            team: this.props.team\n          })\n        }).then(result => {\n          return result.json();\n        }).then(message => {\n          if (message.done) {\n            this.setState({\n              displayTask: \"none\",\n              newTask: {\n                title: \"\",\n                description: \"\",\n                url: \"\",\n                priority: \"#priority\",\n                stage: \"REQUESTED\"\n              }\n            });\n          } else {\n            alert(message.message);\n          }\n        });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    };\n\n    this.closeTask = e => {\n      this.setState({\n        displayTask: \"none\",\n        display: \"flex\"\n      });\n    };\n\n    this.createTask = e => {\n      let newTask = Object.assign({}, this.state.newTask);\n      newTask[e.target.id] = e.target.value;\n      this.setState({\n        newTask: newTask\n      });\n      this.setState({\n        newTask\n      });\n    };\n\n    this.requestTasks = e => {\n      this.props.teamPageDisplaySwitch(\"none\");\n      this.props.movePage(\"close\");\n\n      if (this.props.token) {\n        this.state.displayTask === \"none\" ? this.setState({\n          displayTask: \"flex\",\n          display: \"none\"\n        }) : this.setState({\n          displayTask: \"none\",\n          display: \"flex\"\n        });\n      } else {\n        this.props.history.push(\"/login\");\n      }\n    };\n  }\n\n  render() {\n    const REQ = this.state.teamTasks.REQUESTED;\n    const PROG = this.state.teamTasks.INPROGRESS;\n    const DONE = this.state.teamTasks.DONE;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"each-page\",\n      style: {\n        width: this.props.pageWidth,\n        left: this.props.pageLeft\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"team-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, this.props.team.title.toUpperCase()), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: this.state.display\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      key: `Container-${0}`,\n      name: \"REQUESTED\",\n      className: \"REQUESTED\",\n      id: 0,\n      i: \"REQUESTED\",\n      team: this.props.team,\n      token: this.props.token,\n      user: this.props.user,\n      display: this.state.display,\n      sortOptions: this.state.sortOptions,\n      sign: this.state.sign[\"REQUESTED\"],\n      requestTasks: this.requestTasks,\n      renderTasks: this.renderTasks,\n      opacity: this.state.opacity // location1=\"top\"\n      // location2=\"left\"\n      // location2Digit=\".5vw\"\n      // unit=\"vh\"\n      ,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      key: `Container-${1}`,\n      name: \"INPROGRESS\",\n      className: \"INPROGRESS\",\n      id: 1,\n      i: \"INPROGRESS\",\n      team: this.props.team,\n      token: this.props.token,\n      user: this.props.user,\n      display: this.state.display,\n      sortOptions: this.state.sortOptions,\n      sign: this.state.sign[\"INPROGRESS\"],\n      tasks: PROG || [],\n      requestTasks: this.requestTasks,\n      renderTasks: this.renderTasks,\n      opacity: this.state.opacity,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      key: `Container-${2}`,\n      name: \"DONE\",\n      className: \"DONE\",\n      id: 2,\n      i: \"DONE\",\n      team: this.props.team,\n      token: this.props.token,\n      user: this.props.user,\n      display: this.state.display,\n      sortOptions: this.state.sortOptions,\n      sign: this.state.sign[\"DONE\"],\n      tasks: DONE || [],\n      requestTasks: this.requestTasks,\n      renderTasks: this.renderTasks,\n      opacity: this.state.opacity,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      key: `Container-${3}`,\n      name: \"TRASH\",\n      className: \"TRASH\",\n      id: 3,\n      i: \"TRASH\",\n      team: this.props.team,\n      token: this.props.token,\n      user: this.props.user,\n      display: this.state.display,\n      sortOptions: this.state.sortOptions,\n      sign: this.state.sign[\"DONE\"],\n      tasks: [],\n      requestTasks: this.requestTasks,\n      renderTasks: this.renderTasks,\n      opacity: this.state.opacity,\n      history: this.props.history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    })), this.props.token ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-plus\",\n      id: \"add-task-btn\",\n      onClick: e => this.requestTasks(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"team-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, this.props.team.title.toUpperCase()), /*#__PURE__*/React.createElement(AddTasks, {\n      displayTask: this.state.displayTask,\n      createTask: this.createTask,\n      handleChange: this.handleChange,\n      date: this.state.date,\n      dateTime: this.state.dateTime,\n      priority: this.priority,\n      submitTask: this.submitTask,\n      closeTask: this.closeTask,\n      newTask: this.state.newTask,\n      taskWidth: this.props.taskWidth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 15\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default DragDropContext(HTML5Backend)(TeamPage);","map":{"version":3,"sources":["/Users/lailysarvarian/a-kanban/client/src/components/TeamPage.js"],"names":["React","Component","opensocket","DragDropContext","HTML5Backend","Container","AddTasks","Task","Search","TeamPage","state","boards","displayTask","display","priority","opacity","newTask","stage","teamTasks","dragged","draggedfrom","sign","REQUESTED","INPROGRESS","DONE","date","time","dateTime","datesRange","selectedOption","componentDidMount","fetchTasks","socket","on","data","action","i","fetch","props","team","_id","then","res","json","result","setState","tasks","handleChange","e","name","value","search","submitTask","preventDefault","token","method","headers","Authorization","body","JSON","stringify","title","description","creator","user","responder","url","datetime","message","done","alert","history","push","closeTask","createTask","Object","assign","target","id","requestTasks","teamPageDisplaySwitch","movePage","render","REQ","PROG","width","pageWidth","left","pageLeft","toUpperCase","sortOptions","renderTasks","taskWidth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport opensocket from \"socket.io-client\";\nimport { DragDropContext } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport Container from \"./Container\";\nimport AddTasks from \"./AddTasks\";\nimport Task from \"./Task\";\nimport Search from \"./Search\";\n\nclass TeamPage extends Component {\n  state = {\n    boards: [\"REQUESTED\", \"INPROGRESS\", \"DONE\", \"TRASH\"],\n    displayTask: \"none\",\n    display: \"flex\",\n    priority: \"\",\n    opacity: \"1\",\n    newTask: { priority: \"#0aa7f5\", stage: \"REQUESTED\" },\n    teamTasks: {},\n    dragged: {},\n    draggedfrom: {},\n    sign: {\n      REQUESTED: \"fas fa-sort-up\",\n      INPROGRESS: \"fas fa-sort-up\",\n      DONE: \"fas fa-sort-up\",\n    },\n    date: \"\",\n    time: \"\",\n    dateTime: \"\",\n    datesRange: \"\",\n    selectedOption: null,\n  };\n  componentDidMount = () => {\n    this.fetchTasks(\"na\",\"na\");\n    const socket = opensocket(\"http://localhost:8080\");\n    socket.on(\"task\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchTasks(\"na\",\"na\");\n      }\n    });\n    socket.on(\"taskChange\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchTasks(\"na\",\"na\");\n      }\n    });\n  };\n  fetchTasks = (priority, i) => {\n    fetch(\n      `http://localhost:8080/team/tasks-${this.props.team._id}-${i}-${priority}`\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        this.setState({ teamTasks: result.tasks });\n      });\n  };\n\n  handleChange = (e, { name, value }) => {\n    this.setState({ [name]: value });\n  };\n  search = (e) => {};\n\n  submitTask = (e) => {\n    e.preventDefault();\n    this.setState({ display: \"flex\" });\n    if (this.props.token) {\n      fetch(\"http://localhost:8080/tasks\", {\n        method: \"POST\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          title: this.state.newTask.title,\n          description: this.state.newTask.description,\n          creator: this.props.user,\n          priority: this.state.newTask.priority,\n          responder: [],\n          url: this.state.newTask.url || \"\",\n          stage: this.state.newTask.stage,\n          datetime: this.state.dateTime || \"\",\n          team: this.props.team,\n        }),\n      })\n        .then((result) => {\n          return result.json();\n        })\n        .then((message) => {\n          if (message.done) {\n            this.setState({\n              displayTask: \"none\",\n              newTask: {\n                title: \"\",\n                description: \"\",\n                url: \"\",\n                priority: \"#priority\",\n                stage: \"REQUESTED\",\n              },\n            });\n          } else {\n            alert(message.message);\n          }\n        });\n    } else {\n      this.props.history.push(\"/login\");\n    }\n  };\n  closeTask = (e) => {\n    this.setState({ displayTask: \"none\", display: \"flex\" });\n  };\n  createTask = (e) => {\n    let newTask = Object.assign({}, this.state.newTask);\n    newTask[e.target.id] = e.target.value;\n    this.setState({ newTask: newTask });\n    this.setState({\n      newTask,\n    });\n  };\n  requestTasks = (e) => {\n    this.props.teamPageDisplaySwitch(\"none\");\n    this.props.movePage(\"close\");\n    if (this.props.token) {\n      this.state.displayTask === \"none\"\n        ? this.setState({ displayTask: \"flex\", display: \"none\" })\n        : this.setState({ displayTask: \"none\", display: \"flex\" });\n    } else {\n      this.props.history.push(\"/login\");\n    }\n  };\n  render() {\n    const REQ = this.state.teamTasks.REQUESTED;\n    const PROG = this.state.teamTasks.INPROGRESS;\n    const DONE = this.state.teamTasks.DONE;\n    return (\n        <div\n          className=\"each-page\"\n          style={{ width: this.props.pageWidth, left: this.props.pageLeft }}\n        >\n            <div className=\"team-title\">\n            {this.props.team.title.toUpperCase()}\n          </div>\n          <div style={{ display: this.state.display }}>\n          <Container\n            key={`Container-${0}`}\n            name={\"REQUESTED\"}\n            className={\"REQUESTED\"}\n            id={0}\n            i={\"REQUESTED\"}\n            team={this.props.team}\n            token={this.props.token}\n            user={this.props.user}\n            display={this.state.display}\n            sortOptions={this.state.sortOptions}\n            sign={this.state.sign[\"REQUESTED\"]}\n            requestTasks={this.requestTasks}\n            renderTasks={this.renderTasks}\n            opacity={this.state.opacity}\n            // location1=\"top\"\n            // location2=\"left\"\n            // location2Digit=\".5vw\"\n            // unit=\"vh\"\n            history={this.props.history}\n          />\n          <Container\n            key={`Container-${1}`}\n            name={\"INPROGRESS\"}\n            className={\"INPROGRESS\"}\n            id={1}\n            i={\"INPROGRESS\"}\n            team={this.props.team}\n            token={this.props.token}\n            user={this.props.user}\n            display={this.state.display}\n            sortOptions={this.state.sortOptions}\n            sign={this.state.sign[\"INPROGRESS\"]}\n            tasks={PROG || []}\n           requestTasks={this.requestTasks}\n            renderTasks={this.renderTasks}\n            opacity={this.state.opacity}\n            history={this.props.history}\n          />\n          <Container\n            key={`Container-${2}`}\n            name={\"DONE\"}\n            className={\"DONE\"}\n            id={2}\n            i={\"DONE\"}\n            team={this.props.team}\n            token={this.props.token}\n            user={this.props.user}\n            display={this.state.display}\n            sortOptions={this.state.sortOptions}\n            sign={this.state.sign[\"DONE\"]}\n            tasks={DONE || []}\n           requestTasks={this.requestTasks}\n            renderTasks={this.renderTasks}\n            opacity={this.state.opacity}\n            history={this.props.history}\n          />\n          <Container\n            key={`Container-${3}`}\n            name={\"TRASH\"}\n            className={\"TRASH\"}\n            id={3}\n            i={\"TRASH\"}\n            team={this.props.team}\n            token={this.props.token}\n            user={this.props.user}\n            display={this.state.display}\n            sortOptions={this.state.sortOptions}\n            sign={this.state.sign[\"DONE\"]}\n            tasks={[]}\n            requestTasks={this.requestTasks}\n            renderTasks={this.renderTasks}\n            opacity={this.state.opacity}\n            history={this.props.history}\n          />\n             </div>\n          {this.props.token ? (\n            <div>\n              <i\n                className=\"fas fa-plus\"\n                id=\"add-task-btn\"\n                onClick={(e) => this.requestTasks(e)}\n              />\n              <div className=\"team-title\">\n                {this.props.team.title.toUpperCase()}\n              </div>\n              <AddTasks\n                displayTask={this.state.displayTask}\n                createTask={this.createTask}\n                handleChange={this.handleChange}\n                date={this.state.date}\n                dateTime={this.state.dateTime}\n                priority={this.priority}\n                submitTask={this.submitTask}\n                closeTask={this.closeTask}\n                newTask={this.state.newTask}\n                taskWidth={this.props.taskWidth}\n              />\n            </div>\n          ) : (\n            <div />\n          )}\n     \n      </div>\n    );\n  }\n}\nexport default DragDropContext(HTML5Backend)(TeamPage);\n"]},"metadata":{},"sourceType":"module"}