{"ast":null,"code":"var _jsxFileName = \"/Users/lailysarvarian/a-kanban/client/src/components/Container.js\";\nimport React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport update from \"immutability-helper\";\nimport opensocket from \"socket.io-client\";\nimport { DropTarget } from \"react-dnd\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.fetchTasks(\"na\", \"na\");\n      const socket = opensocket(\"http://localhost:8080\");\n      socket.on(\"task\", data => {\n        if (data.action === \"create\") {\n          this.fetchTasks(\"na\", \"na\");\n        }\n      });\n      socket.on(\"taskChange\", data => {\n        if (data.action === \"create\") {\n          this.fetchTasks(\"na\", \"na\");\n        }\n      });\n    };\n\n    this.fetchTasks = (priority, i) => {\n      fetch(`/team/tasks-${this.props.team._id}-${i}-${priority}`).then(res => {\n        return res.json();\n      }).then(result => {\n        this.setState({\n          tasks: result.tasks\n        });\n      });\n    };\n\n    this.sort = (e, i) => {\n      e.preventDefault();\n\n      if (e.target.value === \"dsc\") {\n        this.fetchTasks(\"na\", \"na\");\n        this.setState({\n          sort: \"dsc\"\n        });\n      } else if (e.target.value === \"asc\") {\n        fetch(`/team/tasks-${this.props.team._id}-na-na`).then(res => {\n          return res.json();\n        }).then(result => {\n          let tempTeam = result.tasks;\n          tempTeam[i] = tempTeam[i].reverse();\n          this.setState({\n            tasks: tempTeam\n          });\n        });\n      } else if (e.target.value === \"STANDARD\") {\n        fetch(`/team/tasks-${this.props.team._id}-${i}-STANDARD`).then(res => {\n          return res.json();\n        }).then(result => {\n          let tempTeam = this.state.tasks;\n          tempTeam[i] = result.tasks;\n          this.setState({\n            tasks: tempTeam\n          });\n        });\n      } else if (e.target.value === \"FIXED\") {\n        fetch(`http://localhost:8080/team/tasks-${this.props.team._id}-${i}-FIXED`).then(res => {\n          return res.json();\n        }).then(result => {\n          let tempTeam = this.state.tasks;\n          tempTeam[i] = result.tasks;\n          this.setState({\n            tasks: tempTeam\n          });\n        });\n      } else if (e.target.value === \"EXPEDITE\") {\n        fetch(`http://localhost:8080/team/tasks-${this.props.team._id}-${i}-EXPEDITE`).then(res => {\n          return res.json();\n        }).then(result => {\n          let tempTeam = this.state.tasks;\n          tempTeam[i] = result.tasks;\n          this.setState({\n            teamTasks: tempTeam\n          });\n        });\n      }\n    };\n\n    this.state = {\n      cards: props.list,\n      tasks: {},\n      sort: \"asc\"\n    };\n  }\n\n  pushCard(card) {\n    if (card.responders.filter(responder => responder._id === this.props.user).length > 0) {\n      let tempTasks = this.state.tasks;\n      card.stage = this.props.name;\n      tempTasks[this.props.name].push(card);\n      this.setState({\n        tasks: tempTasks\n      });\n      fetch(`http://localhost:8080/team-push/${this.props.team._id}`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          // user: this.props.user,\n          // oldBoard: taskName.split(\"-\")[0],\n          // newBoard: board,\n          // i: parseFloat(taskName.split(\"+\")[1]),\n          // situation: 1,\n          user: this.props.user,\n          board: this.props.name,\n          card: card,\n          action: \"push\"\n        })\n      }).then(result => {\n        return result.json();\n      }).then(res => {\n        if (!res.done) {\n          alert(res.message);\n        }\n      });\n    } else {\n      alert(\"YOu dont have the right to move this task\");\n    } // this.setState(update(this.state, {\n    // \tcards: {\n    // \t\t$push: [ card ]\n    // \t}\n    // }));\n\n  }\n\n  removeCard(index) {\n    console.log(this.state.tasks[this.props.name][index], \"this.state.tasks[this.props.name][index]\");\n\n    if (this.state.tasks[this.props.name][index].responders.filter(responder => responder._id === this.props.user).length > 0) {\n      let tempTasks = this.state.tasks;\n      tempTasks[this.props.name].splice(index, 1);\n      this.setState({\n        tasks: tempTasks\n      });\n      fetch(`http://localhost:8080/team-remove/${this.props.team._id}`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          // user: this.props.user,\n          // oldBoard: taskName.split(\"-\")[0],\n          // newBoard: board,\n          // i: parseFloat(taskName.split(\"+\")[1]),\n          // situation: 1,\n          user: this.props.user,\n          board: this.props.name,\n          index: index,\n          action: \"push\"\n        })\n      }).then(result => {\n        return result.json();\n      }).then(res => {\n        if (!res.done) {\n          alert(res.message);\n        }\n      });\n    } else {\n      alert(\"YOu dont have the right to move this task\");\n    } // this.setState(update(this.state, {\n    // \tcards: {\n    // \t\t$splice: [\n    // \t\t\t[index, 1]\n    // \t\t]\n    // \t}\n    // }));\n\n  }\n\n  moveCard(dragIndex, hoverIndex, draggedItem) {\n    let tempTasks = this.state.tasks;\n    tempTasks[this.props.name].splice(dragIndex, 1);\n    tempTasks[this.props.name].splice(hoverIndex, 0, draggedItem);\n    this.setState({\n      tasks: tempTasks\n    }); // const { cards } = this.state;\n    // const dragCard = cards[dragIndex];\n    // this.setState(update(this.state, {\n    // \tcards: {\n    // \t\t$splice: [\n    // \t\t\t[dragIndex, 1],\n    // \t\t\t[hoverIndex, 0, dragCard]\n    // \t\t]\n    // \t}\n    // }));\n  }\n\n  render() {\n    const {\n      cards,\n      tasks\n    } = this.state;\n    const {\n      canDrop,\n      isOver,\n      connectDropTarget\n    } = this.props;\n    const boardTasks = tasks[this.props.name] ? tasks[this.props.name] : [];\n    const isActive = canDrop && isOver;\n    const backgroundColor = isActive ? \"#f5f4f386\" : \"#f5f4f349\";\n    return connectDropTarget( /*#__PURE__*/React.createElement(\"div\", {\n      className: \"each-board\",\n      style: {\n        display: \"flex\"\n      },\n      key: `board-${this.props.name}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"board-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"board-header-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"circle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }), this.props.name), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: e => this.sort(e, this.props.name),\n      className: \"select-sort \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      className: \"react-select-option\",\n      value: \"all\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"react-select-option\",\n      value: \"asc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }\n    }, \"LEAST RECENT\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"react-select-option\",\n      value: \"dsc\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, \"MOST RECENT\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"react-select-option\",\n      value: \"STANDARD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 13\n      }\n    }, \"STANDARD\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"react-select-option\",\n      value: \"FIXED\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    }, \"FIXED DATE\"), /*#__PURE__*/React.createElement(\"option\", {\n      className: \"react-select-option\",\n      value: \"EXPEDITE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 13\n      }\n    }, \"EXPEDITE\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tasks-container\",\n      key: \"tasks-container\",\n      style: {\n        backgroundColor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }\n    }, boardTasks.map((task, i) => {\n      return /*#__PURE__*/React.createElement(Card, {\n        key: `Task-${i}`,\n        index: i,\n        listId: this.props.id,\n        card: task,\n        removeCard: this.removeCard.bind(this),\n        moveCard: this.moveCard.bind(this),\n        token: this.props.token,\n        user: this.props.user,\n        team: this.props.team,\n        opacity: this.props.opacity,\n        history: this.props.history,\n        taskId: `${task.stage}-${task._id}+${i}`,\n        id: task._id,\n        task: task,\n        position: i,\n        location1: \"top\",\n        location2: \"left\",\n        location2Digit: \".5vw\",\n        unit: \"vh\",\n        page: \"teamPage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 15\n        }\n      });\n    }))));\n  }\n\n}\n\nconst cardTarget = {\n  drop(props, monitor, component) {\n    const {\n      id\n    } = props;\n    const sourceObj = monitor.getItem();\n    if (id !== sourceObj.listId) component.pushCard(sourceObj.card);\n    return {\n      listId: id\n    };\n  }\n\n};\nexport default DropTarget(\"CARD\", cardTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop()\n}))(Container);","map":{"version":3,"sources":["/Users/lailysarvarian/a-kanban/client/src/components/Container.js"],"names":["React","Component","Card","update","opensocket","DropTarget","Container","constructor","props","componentDidMount","fetchTasks","socket","on","data","action","priority","i","fetch","team","_id","then","res","json","result","setState","tasks","sort","e","preventDefault","target","value","tempTeam","reverse","state","teamTasks","cards","list","pushCard","card","responders","filter","responder","user","length","tempTasks","stage","name","push","method","headers","Authorization","token","body","JSON","stringify","board","done","alert","message","removeCard","index","console","log","splice","moveCard","dragIndex","hoverIndex","draggedItem","render","canDrop","isOver","connectDropTarget","boardTasks","isActive","backgroundColor","display","map","task","id","bind","opacity","history","cardTarget","drop","monitor","component","sourceObj","getItem","listId","connect","dropTarget"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"./Card\";\nimport update from \"immutability-helper\";\nimport opensocket from \"socket.io-client\";\nimport { DropTarget } from \"react-dnd\";\n\nclass Container extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cards: props.list,\n      tasks: {},\n      sort: \"asc\",\n    };\n  }\n  componentDidMount = () => {\n    this.fetchTasks(\"na\", \"na\");\n    const socket = opensocket(\"http://localhost:8080\");\n    socket.on(\"task\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchTasks(\"na\", \"na\");\n      }\n    });\n    socket.on(\"taskChange\", (data) => {\n      if (data.action === \"create\") {\n        this.fetchTasks(\"na\", \"na\");\n      }\n    });\n  };\n  fetchTasks = (priority, i) => {\n    fetch(\n      `/team/tasks-${this.props.team._id}-${i}-${priority}`\n    )\n      .then((res) => {\n        return res.json();\n      })\n      .then((result) => {\n        this.setState({ tasks: result.tasks });\n      });\n  };\n  sort = (e, i) => {\n    e.preventDefault();\n    if (e.target.value === \"dsc\") {\n      this.fetchTasks(\"na\", \"na\");\n      this.setState({ sort: \"dsc\" });\n    } else if (e.target.value === \"asc\") {\n      fetch(`/team/tasks-${this.props.team._id}-na-na`)\n        .then((res) => {\n          return res.json();\n        })\n        .then((result) => {\n          let tempTeam = result.tasks;\n          tempTeam[i] = tempTeam[i].reverse();\n          this.setState({ tasks: tempTeam });\n        });\n    } else if (e.target.value === \"STANDARD\") {\n      fetch(\n        `/team/tasks-${this.props.team._id}-${i}-STANDARD`\n      )\n        .then((res) => {\n          return res.json();\n        })\n        .then((result) => {\n          let tempTeam = this.state.tasks;\n          tempTeam[i] = result.tasks;\n          this.setState({ tasks: tempTeam });\n        });\n    } else if (e.target.value === \"FIXED\") {\n      fetch(\n        `http://localhost:8080/team/tasks-${this.props.team._id}-${i}-FIXED`\n      )\n        .then((res) => {\n          return res.json();\n        })\n        .then((result) => {\n          let tempTeam = this.state.tasks;\n          tempTeam[i] = result.tasks;\n          this.setState({ tasks: tempTeam });\n        });\n    } else if (e.target.value === \"EXPEDITE\") {\n      fetch(\n        `http://localhost:8080/team/tasks-${this.props.team._id}-${i}-EXPEDITE`\n      )\n        .then((res) => {\n          return res.json();\n        })\n        .then((result) => {\n          let tempTeam = this.state.tasks;\n          tempTeam[i] = result.tasks;\n          this.setState({ teamTasks: tempTeam });\n        });\n    }\n  };\n  pushCard(card) {\n    if (\n      card.responders.filter((responder) => responder._id === this.props.user)\n        .length > 0\n    ) {\n      let tempTasks = this.state.tasks;\n      card.stage = this.props.name;\n      tempTasks[this.props.name].push(card);\n\n      this.setState({ tasks: tempTasks });\n      fetch(`http://localhost:8080/team-push/${this.props.team._id}`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          // user: this.props.user,\n          // oldBoard: taskName.split(\"-\")[0],\n          // newBoard: board,\n          // i: parseFloat(taskName.split(\"+\")[1]),\n          // situation: 1,\n          user: this.props.user,\n          board: this.props.name,\n          card: card,\n          action: \"push\",\n        }),\n      })\n        .then((result) => {\n          return result.json();\n        })\n        .then((res) => {\n          if (!res.done) {\n            alert(res.message);\n          }\n        });\n    } else {\n      alert(\"YOu dont have the right to move this task\");\n    }\n    // this.setState(update(this.state, {\n    // \tcards: {\n    // \t\t$push: [ card ]\n    // \t}\n    // }));\n  }\n\n  removeCard(index) {\n    console.log(\n      this.state.tasks[this.props.name][index],\n      \"this.state.tasks[this.props.name][index]\"\n    );\n    if (\n      this.state.tasks[this.props.name][index].responders.filter(\n        (responder) => responder._id === this.props.user\n      ).length > 0\n    ) {\n      let tempTasks = this.state.tasks;\n      tempTasks[this.props.name].splice(index, 1);\n      this.setState({ tasks: tempTasks });\n      fetch(`http://localhost:8080/team-remove/${this.props.team._id}`, {\n        method: \"PUT\",\n        headers: {\n          Authorization: \"Bearer \" + this.props.token,\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          // user: this.props.user,\n          // oldBoard: taskName.split(\"-\")[0],\n          // newBoard: board,\n          // i: parseFloat(taskName.split(\"+\")[1]),\n          // situation: 1,\n          user: this.props.user,\n          board: this.props.name,\n          index: index,\n          action: \"push\",\n        }),\n      })\n        .then((result) => {\n          return result.json();\n        })\n        .then((res) => {\n          if (!res.done) {\n            alert(res.message);\n          }\n        });\n    } else {\n      alert(\"YOu dont have the right to move this task\");\n    }\n    // this.setState(update(this.state, {\n    // \tcards: {\n    // \t\t$splice: [\n    // \t\t\t[index, 1]\n    // \t\t]\n    // \t}\n    // }));\n  }\n  moveCard(dragIndex, hoverIndex, draggedItem) {\n    let tempTasks = this.state.tasks;\n    tempTasks[this.props.name].splice(dragIndex, 1);\n    tempTasks[this.props.name].splice(hoverIndex, 0, draggedItem);\n    this.setState({ tasks: tempTasks });\n    // const { cards } = this.state;\n    // const dragCard = cards[dragIndex];\n\n    // this.setState(update(this.state, {\n    // \tcards: {\n    // \t\t$splice: [\n    // \t\t\t[dragIndex, 1],\n    // \t\t\t[hoverIndex, 0, dragCard]\n    // \t\t]\n    // \t}\n    // }));\n  }\n  render() {\n    const { cards, tasks } = this.state;\n    const { canDrop, isOver, connectDropTarget } = this.props;\n    const boardTasks = tasks[this.props.name] ? tasks[this.props.name] : [];\n    const isActive = canDrop && isOver;\n    const backgroundColor = isActive ? \"#f5f4f386\" : \"#f5f4f349\";\n    return connectDropTarget(\n      <div\n        className=\"each-board\"\n        style={{ display: \"flex\" }}\n        key={`board-${this.props.name}`}\n      >\n        <div className=\"board-header\">\n          <div id=\"board-header-title\">\n            <div id=\"circle\"></div>\n            {this.props.name}\n          </div>\n          <select\n            onChange={(e) => this.sort(e, this.props.name)}\n            className=\"select-sort \"\n          >\n            <option className=\"react-select-option\" value=\"all\"></option>\n            <option className=\"react-select-option\" value=\"asc\">\n              LEAST RECENT\n            </option>\n            <option className=\"react-select-option\" value=\"dsc\">\n              MOST RECENT\n            </option>\n            <option className=\"react-select-option\" value=\"STANDARD\">\n              STANDARD\n            </option>\n            <option className=\"react-select-option\" value=\"FIXED\">\n              FIXED DATE\n            </option>\n            <option className=\"react-select-option\" value=\"EXPEDITE\">\n              EXPEDITE\n            </option>\n          </select>\n        </div>\n        <div\n          className=\"tasks-container\"\n          key={\"tasks-container\"}\n          style={{ backgroundColor }}\n        >\n          {boardTasks.map((task, i) => {\n            return (\n              <Card\n                key={`Task-${i}`}\n                index={i}\n                listId={this.props.id}\n                card={task}\n                removeCard={this.removeCard.bind(this)}\n                moveCard={this.moveCard.bind(this)}\n                token={this.props.token}\n                user={this.props.user}\n                team={this.props.team}\n                opacity={this.props.opacity}\n                history={this.props.history}\n                taskId={`${task.stage}-${task._id}+${i}`}\n                id={task._id}\n                task={task}\n                position={i}\n                location1=\"top\"\n                location2=\"left\"\n                location2Digit=\".5vw\"\n                unit=\"vh\"\n                page=\"teamPage\"\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\nconst cardTarget = {\n  drop(props, monitor, component) {\n    const { id } = props;\n    const sourceObj = monitor.getItem();\n    if (id !== sourceObj.listId) component.pushCard(sourceObj.card);\n    return {\n      listId: id,\n    };\n  },\n};\nexport default DropTarget(\"CARD\", cardTarget, (connect, monitor) => ({\n  connectDropTarget: connect.dropTarget(),\n  isOver: monitor.isOver(),\n  canDrop: monitor.canDrop(),\n}))(Container);\n"]},"metadata":{},"sourceType":"module"}